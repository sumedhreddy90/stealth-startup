{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/sumedhreddy/Documents/stealth/stealth-startup/src/components/home/HomeHeaderView.tsx\";\n\nimport React, { useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useLocalization } from \"../../localization\";\nimport moment from \"moment\";\nimport { Icon } from \"../Icon\";\nimport { Avatar } from \"../Avatar\";\nimport { Text } from \"../Text\";\nimport { useTheme } from \"../../theme\";\nimport { AuthenticationContext } from \"../../context\";\nimport { getImageUrl } from \"../../helpers\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport NavigationNames from \"../../navigations/NavigationNames\";\nexport var HomeHeaderView = function HomeHeaderView(props) {\n  var _authContext$user;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _useLocalization = useLocalization(),\n      getString = _useLocalization.getString;\n\n  var navigation = useNavigation();\n  var authContext = useContext(AuthenticationContext);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.flex1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.headerTitleText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, getString(\"today\")), React.createElement(Text, {\n    style: styles.headerDateText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, moment(new Date()).format(\"LL\"))), React.createElement(TouchableOpacity, {\n    style: {\n      marginEnd: 16\n    },\n    onPress: function onPress() {\n      return navigation.navigate(NavigationNames.SearchTab);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(Icon, {\n    name: \"ios-search\",\n    size: 25,\n    ignoreRTL: true,\n    color: colors.gray,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      if (authContext.isLoggedIn) {\n        navigation.navigate(NavigationNames.ProfileTab);\n      } else {\n        navigation.navigate(NavigationNames.RootLoginScreen);\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(Avatar, {\n    imageStyle: styles.profileAvatarImage,\n    style: [styles.profileAvatar, {\n      borderColor: colors.lightgray,\n      backgroundColor: colors.lightgray\n    }],\n    source: {\n      uri: getImageUrl((_authContext$user = authContext.user) == null ? void 0 : _authContext$user.imageName)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n};\nvar styles = StyleSheet.create({\n  flex1: {\n    flex: 1\n  },\n  container: {\n    flexDirection: \"row\",\n    paddingHorizontal: 16,\n    alignItems: \"center\",\n    paddingTop: 16\n  },\n  headerTitleText: {\n    fontSize: 38,\n    fontFamily: \"default-bold\"\n  },\n  headerDateText: {\n    fontSize: 14,\n    fontFamily: \"default-bold\",\n    marginTop: -2,\n    color: \"gray\"\n  },\n  profileAvatar: {\n    borderWidth: 1,\n    borderRadius: 100\n  },\n  profileAvatarImage: {\n    width: 36,\n    height: 36,\n    borderRadius: 100\n  }\n});","map":{"version":3,"sources":["/Users/sumedhreddy/Documents/stealth/stealth-startup/src/components/home/HomeHeaderView.tsx"],"names":["React","useContext","useLocalization","moment","Icon","Avatar","Text","useTheme","AuthenticationContext","getImageUrl","useNavigation","NavigationNames","HomeHeaderView","props","colors","getString","navigation","authContext","styles","container","flex1","headerTitleText","headerDateText","Date","format","marginEnd","navigate","SearchTab","gray","isLoggedIn","ProfileTab","RootLoginScreen","profileAvatarImage","profileAvatar","borderColor","lightgray","backgroundColor","uri","user","imageName","StyleSheet","create","flex","flexDirection","paddingHorizontal","alignItems","paddingTop","fontSize","fontFamily","marginTop","color","borderWidth","borderRadius","width","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;AAEA,SAASC,eAAT;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,IAAT;AACA,SAASC,MAAT;AACA,SAASC,IAAT;AACA,SAASC,QAAT;AACA,SAASC,qBAAT;AACA,SAASC,WAAT;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,eAAP;AAIA,OAAO,IAAMC,cAAgC,GAAG,SAAnCA,cAAmC,CAACC,KAAD,EAAW;AAAA;;AACzD,kBAAmBN,QAAQ,EAA3B;AAAA,MAAQO,MAAR,aAAQA,MAAR;;AACA,yBAAsBZ,eAAe,EAArC;AAAA,MAAQa,SAAR,oBAAQA,SAAR;;AACA,MAAMC,UAAU,GAAGN,aAAa,EAAhC;AACA,MAAMO,WAAW,GAAGhB,UAAU,CAACO,qBAAD,CAA9B;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEU,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCN,SAAS,CAAC,OAAD,CAA/C,CADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACI,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,MAAM,CAAC,IAAIoB,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,IAA1B,CADH,CAFF,CADF,EAOE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KADT;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMT,UAAU,CAACU,QAAX,CAAoBf,eAAe,CAACgB,SAApC,CAAN;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,YAAX;AAAwB,IAAA,IAAI,EAAE,EAA9B;AAAkC,IAAA,SAAS,MAA3C;AAA4C,IAAA,KAAK,EAAEb,MAAM,CAACc,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAPF,EAaE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACb,UAAIX,WAAW,CAACY,UAAhB,EAA4B;AAC1Bb,QAAAA,UAAU,CAACU,QAAX,CAAoBf,eAAe,CAACmB,UAApC;AACD,OAFD,MAEO;AACLd,QAAAA,UAAU,CAACU,QAAX,CAAoBf,eAAe,CAACoB,eAApC;AACD;AACF,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAEb,MAAM,CAACc,kBADrB;AAEE,IAAA,KAAK,EAAE,CACLd,MAAM,CAACe,aADF,EAEL;AACEC,MAAAA,WAAW,EAAEpB,MAAM,CAACqB,SADtB;AAEEC,MAAAA,eAAe,EAAEtB,MAAM,CAACqB;AAF1B,KAFK,CAFT;AASE,IAAA,MAAM,EAAE;AACNE,MAAAA,GAAG,EAAE5B,WAAW,sBAACQ,WAAW,CAACqB,IAAb,qBAAC,kBAAkBC,SAAnB;AADV,KATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAbF,CADF;AAuCD,CA7CM;AA+CP,IAAMrB,MAAM,GAAGsB,UAAU,CAACC,MAAX,CAAkB;AAC/BrB,EAAAA,KAAK,EAAE;AAAEsB,IAAAA,IAAI,EAAE;AAAR,GADwB;AAE/BvB,EAAAA,SAAS,EAAE;AACTwB,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,iBAAiB,EAAE,EAFV;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,UAAU,EAAE;AAJH,GAFoB;AAQ/BzB,EAAAA,eAAe,EAAE;AACf0B,IAAAA,QAAQ,EAAE,EADK;AAEfC,IAAAA,UAAU,EAAE;AAFG,GARc;AAY/B1B,EAAAA,cAAc,EAAE;AACdyB,IAAAA,QAAQ,EAAE,EADI;AAEdC,IAAAA,UAAU,EAAE,cAFE;AAGdC,IAAAA,SAAS,EAAE,CAAC,CAHE;AAIdC,IAAAA,KAAK,EAAE;AAJO,GAZe;AAkB/BjB,EAAAA,aAAa,EAAE;AACbkB,IAAAA,WAAW,EAAE,CADA;AAEbC,IAAAA,YAAY,EAAE;AAFD,GAlBgB;AAsB/BpB,EAAAA,kBAAkB,EAAE;AAClBqB,IAAAA,KAAK,EAAE,EADW;AAElBC,IAAAA,MAAM,EAAE,EAFU;AAGlBF,IAAAA,YAAY,EAAE;AAHI;AAtBW,CAAlB,CAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { View, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { useLocalization } from \"../../localization\";\nimport moment from \"moment\";\nimport { Icon } from \"../Icon\";\nimport { Avatar } from \"../Avatar\";\nimport { Text } from \"../Text\";\nimport { useTheme } from \"../../theme\";\nimport { AuthenticationContext } from \"../../context\";\nimport { getImageUrl } from \"../../helpers\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport NavigationNames from \"../../navigations/NavigationNames\";\n\ntype TProps = {};\n\nexport const HomeHeaderView: React.FC<TProps> = (props) => {\n  const { colors } = useTheme();\n  const { getString } = useLocalization();\n  const navigation = useNavigation();\n  const authContext = useContext(AuthenticationContext);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.flex1}>\n        <Text style={styles.headerTitleText}>{getString(\"today\")}</Text>\n        <Text style={styles.headerDateText}>\n          {moment(new Date()).format(\"LL\")}\n        </Text>\n      </View>\n      <TouchableOpacity\n        style={{ marginEnd: 16 }}\n        onPress={() => navigation.navigate(NavigationNames.SearchTab)}\n      >\n        <Icon name=\"ios-search\" size={25} ignoreRTL color={colors.gray} />\n      </TouchableOpacity>\n      <TouchableOpacity\n        onPress={() => {\n          if (authContext.isLoggedIn) {\n            navigation.navigate(NavigationNames.ProfileTab);\n          } else {\n            navigation.navigate(NavigationNames.RootLoginScreen);\n          }\n        }}\n      >\n        <Avatar\n          imageStyle={styles.profileAvatarImage}\n          style={[\n            styles.profileAvatar,\n            {\n              borderColor: colors.lightgray,\n              backgroundColor: colors.lightgray,\n            },\n          ]}\n          source={{\n            uri: getImageUrl(authContext.user?.imageName),\n          }}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  flex1: { flex: 1 },\n  container: {\n    flexDirection: \"row\",\n    paddingHorizontal: 16,\n    alignItems: \"center\",\n    paddingTop: 16,\n  },\n  headerTitleText: {\n    fontSize: 38,\n    fontFamily: \"default-bold\",\n  },\n  headerDateText: {\n    fontSize: 14,\n    fontFamily: \"default-bold\",\n    marginTop: -2,\n    color: \"gray\",\n  },\n  profileAvatar: {\n    borderWidth: 1,\n    borderRadius: 100,\n  },\n  profileAvatarImage: {\n    width: 36,\n    height: 36,\n    borderRadius: 100,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}