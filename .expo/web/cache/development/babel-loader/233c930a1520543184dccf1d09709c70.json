{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/sumedhreddy/Documents/stealth/stealth-startup/src/modals/SettingsBottomSheet.tsx\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { ReactNativeModal } from \"react-native-modal\";\nimport { Divider, Text } from \"../components\";\nimport { useLocalization } from \"../localization\";\nimport { getLang } from \"../constants\";\nimport { useTheme } from \"../theme\";\n\nvar LangButton = function LangButton(props) {\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors,\n      sizes = _useTheme.sizes;\n\n  return React.createElement(TouchableOpacity, {\n    onPress: props.onPress,\n    style: [styles.buttonsContainer, {\n      backgroundColor: colors.primaryColor\n    }, !props.isSelected && {\n      backgroundColor: colors.windowBackground,\n      borderColor: colors.gray,\n      borderWidth: 1\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: [styles.buttonTitleText, !props.isSelected && {\n      color: colors.textColor\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, props.title));\n};\n\nexport var SettingsBottomSheet = function SettingsBottomSheet(props) {\n  var _useTheme2 = useTheme(),\n      colors = _useTheme2.colors,\n      changeTheme = _useTheme2.changeTheme,\n      isDark = _useTheme2.isDark;\n\n  var _useLocalization = useLocalization(),\n      getString = _useLocalization.getString,\n      currentLanguage = _useLocalization.currentLanguage,\n      changeLanguage = _useLocalization.changeLanguage;\n\n  return React.createElement(ReactNativeModal, {\n    isVisible: props.isVisible,\n    swipeDirection: \"down\",\n    style: styles.modal,\n    onSwipeComplete: props.onDismissModal,\n    onBackdropPress: props.onDismissModal,\n    onBackButtonPress: props.onDismissModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(SafeAreaView, {\n    style: [styles.safeAreaContainer, {\n      backgroundColor: colors.windowBackground\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.modalContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.section,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: [styles.titleText, {\n      color: colors.textColor\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, getString(\"selected_language\")), React.createElement(View, {\n    style: styles.choseBoxes,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, React.createElement(LangButton, {\n    title: \"EN\",\n    isSelected: currentLanguage() === \"en\",\n    onPress: function onPress() {\n      return changeLanguage(getLang(\"en\"));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }), React.createElement(LangButton, {\n    title: \"AR\",\n    isSelected: currentLanguage() === \"ar\",\n    onPress: function onPress() {\n      return changeLanguage(getLang(\"ar\"));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }))), React.createElement(Divider, {\n    style: {\n      marginVertical: 12\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.section,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: [styles.titleText, {\n      color: colors.textColor\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, getString(\"theme\")), React.createElement(View, {\n    style: styles.choseBoxes,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, React.createElement(LangButton, {\n    title: \"LIGHT\",\n    isSelected: !isDark,\n    onPress: function onPress() {\n      return changeTheme(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }), React.createElement(LangButton, {\n    title: \"DARK\",\n    isSelected: isDark,\n    onPress: function onPress() {\n      return changeTheme(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }))))));\n};\nvar styles = StyleSheet.create({\n  modal: {\n    justifyContent: \"flex-end\",\n    margin: 0\n  },\n  safeAreaContainer: {\n    borderTopStartRadius: 24,\n    borderTopEndRadius: 24,\n    minHeight: 300\n  },\n  modalContainer: {\n    padding: 24\n  },\n  buttonsContainer: {\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 4,\n    marginHorizontal: 4\n  },\n  section: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  choseBoxes: {\n    flexDirection: \"row\"\n  },\n  titleText: {\n    flex: 1,\n    fontFamily: \"default-medium\",\n    fontSize: 15\n  },\n  buttonTitleText: {\n    color: \"white\",\n    fontFamily: \"default-medium\",\n    fontSize: 13\n  }\n});","map":{"version":3,"sources":["/Users/sumedhreddy/Documents/stealth/stealth-startup/src/modals/SettingsBottomSheet.tsx"],"names":["React","ReactNativeModal","Divider","Text","useLocalization","getLang","useTheme","LangButton","props","colors","sizes","onPress","styles","buttonsContainer","backgroundColor","primaryColor","isSelected","windowBackground","borderColor","gray","borderWidth","buttonTitleText","color","textColor","title","SettingsBottomSheet","changeTheme","isDark","getString","currentLanguage","changeLanguage","isVisible","modal","onDismissModal","safeAreaContainer","modalContainer","section","titleText","choseBoxes","marginVertical","StyleSheet","create","justifyContent","margin","borderTopStartRadius","borderTopEndRadius","minHeight","padding","paddingVertical","paddingHorizontal","alignItems","borderRadius","marginHorizontal","flexDirection","flex","fontFamily","fontSize"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, StyleSheet, TouchableOpacity, SafeAreaView } from \"react-native\";\nimport { ReactNativeModal } from \"react-native-modal\";\n\nimport { Divider, Text } from \"../components\";\nimport { useLocalization } from \"../localization\";\nimport { getLang } from \"../constants\";\nimport { useTheme } from \"../theme\";\n\nconst LangButton: React.FC<{\n  title: string;\n  isSelected: boolean;\n  onPress: () => void;\n}> = (props) => {\n  const { colors, sizes } = useTheme();\n  return (\n    <TouchableOpacity\n      onPress={props.onPress}\n      style={[\n        styles.buttonsContainer,\n        {\n          backgroundColor: colors.primaryColor,\n        },\n        !props.isSelected && {\n          backgroundColor: colors.windowBackground,\n          borderColor: colors.gray,\n          borderWidth: 1,\n        },\n      ]}\n    >\n      <Text\n        style={[\n          styles.buttonTitleText,\n          !props.isSelected && {\n            color: colors.textColor,\n          },\n        ]}\n      >\n        {props.title}\n      </Text>\n    </TouchableOpacity>\n  );\n};\n\ntype TProps = {\n  isVisible: boolean;\n  onDismissModal: () => void;\n};\n\nexport const SettingsBottomSheet: React.FC<TProps> = (props) => {\n  const { colors, changeTheme, isDark } = useTheme();\n  const { getString, currentLanguage, changeLanguage } = useLocalization();\n\n  return (\n    <ReactNativeModal\n      isVisible={props.isVisible}\n      swipeDirection=\"down\"\n      style={styles.modal}\n      onSwipeComplete={props.onDismissModal}\n      onBackdropPress={props.onDismissModal}\n      onBackButtonPress={props.onDismissModal}\n    >\n      <SafeAreaView\n        style={[\n          styles.safeAreaContainer,\n          {\n            backgroundColor: colors.windowBackground,\n          },\n        ]}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.section}>\n            <Text\n              style={[\n                styles.titleText,\n                {\n                  color: colors.textColor,\n                },\n              ]}\n            >\n              {getString(\"selected_language\")}\n            </Text>\n            <View style={styles.choseBoxes}>\n              <LangButton\n                title=\"EN\"\n                isSelected={currentLanguage() === \"en\"}\n                onPress={() => changeLanguage(getLang(\"en\"))}\n              />\n              <LangButton\n                title=\"AR\"\n                isSelected={currentLanguage() === \"ar\"}\n                onPress={() => changeLanguage(getLang(\"ar\"))}\n              />\n            </View>\n          </View>\n          <Divider style={{ marginVertical: 12 }} />\n          <View style={styles.section}>\n            <Text\n              style={[\n                styles.titleText,\n                {\n                  color: colors.textColor,\n                },\n              ]}\n            >\n              {getString(\"theme\")}\n            </Text>\n            <View style={styles.choseBoxes}>\n              <LangButton\n                title=\"LIGHT\"\n                isSelected={!isDark}\n                onPress={() => changeTheme(false)}\n              />\n              <LangButton\n                title=\"DARK\"\n                isSelected={isDark}\n                onPress={() => changeTheme(true)}\n              />\n            </View>\n          </View>\n        </View>\n      </SafeAreaView>\n    </ReactNativeModal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modal: {\n    justifyContent: \"flex-end\",\n    margin: 0,\n  },\n  safeAreaContainer: {\n    borderTopStartRadius: 24,\n    borderTopEndRadius: 24,\n    minHeight: 300,\n  },\n  modalContainer: {\n    padding: 24,\n  },\n  buttonsContainer: {\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 4,\n    marginHorizontal: 4,\n  },\n  section: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  choseBoxes: { flexDirection: \"row\" },\n  titleText: {\n    flex: 1,\n    fontFamily: \"default-medium\",\n    fontSize: 15,\n  },\n  buttonTitleText: {\n    color: \"white\",\n    fontFamily: \"default-medium\",\n    fontSize: 13,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}