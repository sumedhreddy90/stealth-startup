{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sumedhreddy/Documents/stealth/stealth-startup/src/components/HtmlView.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport HTML from \"react-native-render-html\";\nimport { useTheme } from \"../theme\";\nexport var HtmlView = function HtmlView(props) {\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  return React.createElement(HTML, {\n    baseFontStyle: _objectSpread(_objectSpread({}, styles.htmlBaseFontStyle), {}, {\n      color: colors.textColor\n    }, props.fontStyle),\n    html: props.htmlContent,\n    imagesMaxWidth: props.imagesMaxWidthOffset,\n    ignoredStyles: [\"font-family\"],\n    tagsStyles: {\n      p: {\n        marginVertical: 4\n      },\n      h1: {\n        marginTop: 12,\n        marginBottom: 2,\n        fontSize: 24,\n        fontFamily: \"default-medium\"\n      },\n      h2: {\n        marginTop: 12,\n        marginBottom: 2,\n        fontSize: 22,\n        fontFamily: \"default-medium\"\n      },\n      h3: {\n        marginTop: 12,\n        marginBottom: 2,\n        fontSize: 20,\n        fontFamily: \"default-medium\"\n      },\n      h4: {\n        marginTop: 12,\n        marginBottom: 2,\n        fontSize: 16,\n        fontFamily: \"default-medium\"\n      },\n      strong: {\n        fontFamily: \"default-medium\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  });\n};\nvar styles = StyleSheet.create({\n  htmlBaseFontStyle: {\n    fontSize: 15,\n    fontFamily: \"default-regular\",\n    writingDirection: I18nManager.isRTL ? \"rtl\" : \"ltr\",\n    textAlign: \"justify\",\n    color: \"red\"\n  }\n});","map":{"version":3,"sources":["/Users/sumedhreddy/Documents/stealth/stealth-startup/src/components/HtmlView.tsx"],"names":["React","HTML","useTheme","HtmlView","props","colors","styles","htmlBaseFontStyle","color","textColor","fontStyle","htmlContent","imagesMaxWidthOffset","p","marginVertical","h1","marginTop","marginBottom","fontSize","fontFamily","h2","h3","h4","strong","StyleSheet","create","writingDirection","I18nManager","isRTL","textAlign"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAQA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,SAASC,QAAT;AAQA,OAAO,IAAMC,QAA0B,GAAG,SAA7BA,QAA6B,CAACC,KAAD,EAAW;AACnD,kBAAmBF,QAAQ,EAA3B;AAAA,MAAQG,MAAR,aAAQA,MAAR;;AACA,SACE,oBAAC,IAAD;AACE,IAAA,aAAa,kCACRC,MAAM,CAACC,iBADC;AAEXC,MAAAA,KAAK,EAAEH,MAAM,CAACI;AAFH,OAGPL,KAAK,CAACM,SAHC,CADf;AAME,IAAA,IAAI,EAAEN,KAAK,CAACO,WANd;AAOE,IAAA,cAAc,EAAEP,KAAK,CAACQ,oBAPxB;AAQE,IAAA,aAAa,EAAE,CAAC,aAAD,CARjB;AASE,IAAA,UAAU,EAAE;AACVC,MAAAA,CAAC,EAAE;AAAEC,QAAAA,cAAc,EAAE;AAAlB,OADO;AAEVC,MAAAA,EAAE,EAAE;AACFC,QAAAA,SAAS,EAAE,EADT;AAEFC,QAAAA,YAAY,EAAE,CAFZ;AAGFC,QAAAA,QAAQ,EAAE,EAHR;AAIFC,QAAAA,UAAU,EAAE;AAJV,OAFM;AAQVC,MAAAA,EAAE,EAAE;AACFJ,QAAAA,SAAS,EAAE,EADT;AAEFC,QAAAA,YAAY,EAAE,CAFZ;AAGFC,QAAAA,QAAQ,EAAE,EAHR;AAIFC,QAAAA,UAAU,EAAE;AAJV,OARM;AAcVE,MAAAA,EAAE,EAAE;AACFL,QAAAA,SAAS,EAAE,EADT;AAEFC,QAAAA,YAAY,EAAE,CAFZ;AAGFC,QAAAA,QAAQ,EAAE,EAHR;AAIFC,QAAAA,UAAU,EAAE;AAJV,OAdM;AAoBVG,MAAAA,EAAE,EAAE;AACFN,QAAAA,SAAS,EAAE,EADT;AAEFC,QAAAA,YAAY,EAAE,CAFZ;AAGFC,QAAAA,QAAQ,EAAE,EAHR;AAIFC,QAAAA,UAAU,EAAE;AAJV,OApBM;AA0BVI,MAAAA,MAAM,EAAE;AAAEJ,QAAAA,UAAU,EAAE;AAAd;AA1BE,KATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAwCD,CA1CM;AA4CP,IAAMb,MAAM,GAAGkB,UAAU,CAACC,MAAX,CAAkB;AAC/BlB,EAAAA,iBAAiB,EAAE;AACjBW,IAAAA,QAAQ,EAAE,EADO;AAEjBC,IAAAA,UAAU,EAAE,iBAFK;AAGjBO,IAAAA,gBAAgB,EAAEC,WAAW,CAACC,KAAZ,GAAoB,KAApB,GAA4B,KAH7B;AAIjBC,IAAAA,SAAS,EAAE,SAJM;AAKjBrB,IAAAA,KAAK,EAAE;AALU;AADY,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  Dimensions,\n  I18nManager,\n  TextStyle,\n  StyleProp,\n} from \"react-native\";\nimport HTML from \"react-native-render-html\";\nimport { useTheme } from \"../theme\";\n\ntype TProps = {\n  htmlContent: string;\n  imagesMaxWidthOffset: number;\n  fontStyle?: StyleProp<TextStyle>;\n};\n\nexport const HtmlView: React.FC<TProps> = (props) => {\n  const { colors } = useTheme();\n  return (\n    <HTML\n      baseFontStyle={{\n        ...styles.htmlBaseFontStyle,\n        color: colors.textColor,\n        ...(props.fontStyle as any),\n      }}\n      html={props.htmlContent}\n      imagesMaxWidth={props.imagesMaxWidthOffset}\n      ignoredStyles={[\"font-family\"]}\n      tagsStyles={{\n        p: { marginVertical: 4 },\n        h1: {\n          marginTop: 12,\n          marginBottom: 2,\n          fontSize: 24,\n          fontFamily: \"default-medium\",\n        },\n        h2: {\n          marginTop: 12,\n          marginBottom: 2,\n          fontSize: 22,\n          fontFamily: \"default-medium\",\n        },\n        h3: {\n          marginTop: 12,\n          marginBottom: 2,\n          fontSize: 20,\n          fontFamily: \"default-medium\",\n        },\n        h4: {\n          marginTop: 12,\n          marginBottom: 2,\n          fontSize: 16,\n          fontFamily: \"default-medium\",\n        },\n        strong: { fontFamily: \"default-medium\" },\n      }}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  htmlBaseFontStyle: {\n    fontSize: 15,\n    fontFamily: \"default-regular\",\n    writingDirection: I18nManager.isRTL ? \"rtl\" : \"ltr\",\n    textAlign: \"justify\",\n    color: \"red\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}