{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sumedhreddy/Documents/stealth/stealth-startup/src/screens/CategoryDetailScreen.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NewsListItemWideView, Separator } from \"../components\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { useTheme } from \"../theme\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { NewsService } from \"../services\";\nimport NavigationNames from \"../navigations/NavigationNames\";\nimport { getImageUrl } from \"../helpers\";\nexport var CategoryDetailScreen = function CategoryDetailScreen() {\n  var navigation = useNavigation();\n\n  var _useRoute = useRoute(),\n      params = _useRoute.params;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var category = params[\"model\"];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      news = _useState2[0],\n      setNews = _useState2[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: category.name,\n      headerTintColor: \"white\",\n      headerBackground: function headerBackground() {\n        return React.createElement(View, {\n          style: [StyleSheet.absoluteFill, {\n            backgroundColor: colors.windowBackground\n          }],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 9\n          }\n        }, React.createElement(Image, {\n          source: {\n            uri: getImageUrl(category.imageName)\n          },\n          style: [StyleSheet.absoluteFill, {\n            opacity: 0.7\n          }],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }\n        }), React.createElement(LinearGradient, {\n          colors: [category.color, \"transparent\"],\n          start: I18nManager.isRTL ? [1, 0] : [0, 1],\n          end: I18nManager.isRTL ? [0, 1] : [1, 0],\n          style: [StyleSheet.absoluteFill],\n          pointerEvents: \"none\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }\n        }));\n      }\n    });\n  }, [navigation]);\n  useEffect(function () {\n    NewsService.getAllByCategory(category).then(function (res) {\n      return setNews(res.data);\n    }).catch(function (err) {\n      return alert(err.message);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: news,\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(Separator, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 39\n        }\n      });\n    },\n    contentContainerStyle: styles.newsListContainerStyle,\n    showsVerticalScrollIndicator: false,\n    keyExtractor: function keyExtractor(_, index) {\n      return \"categoryItemKey\" + index;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        activeOpacity: 0.8,\n        onPress: function onPress() {\n          return navigation.push(NavigationNames.NewsDetailScreen, {\n            model: _objectSpread({}, item)\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, React.createElement(NewsListItemWideView, {\n        item: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  newsListContainerStyle: {\n    padding: 16\n  }\n});","map":{"version":3,"sources":["/Users/sumedhreddy/Documents/stealth/stealth-startup/src/screens/CategoryDetailScreen.tsx"],"names":["React","useState","useEffect","useLayoutEffect","NewsListItemWideView","Separator","useNavigation","useRoute","useTheme","LinearGradient","NewsService","NavigationNames","getImageUrl","CategoryDetailScreen","navigation","params","colors","category","news","setNews","setOptions","title","name","headerTintColor","headerBackground","StyleSheet","absoluteFill","backgroundColor","windowBackground","uri","imageName","opacity","color","I18nManager","isRTL","getAllByCategory","then","res","data","catch","err","alert","message","styles","container","newsListContainerStyle","_","index","item","push","NewsDetailScreen","model","create","flex","padding"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,eAArC,QAA4D,OAA5D;;;;;;;AASA,SAASC,oBAAT,EAA+BC,SAA/B;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,0BAAxC;AACA,SAASC,QAAT;AACA,SAASC,cAAT,QAA+B,sBAA/B;AAEA,SAASC,WAAT;AACA,OAAOC,eAAP;AAEA,SAASC,WAAT;AAEA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACxC,MAAMC,UAAU,GAAGR,aAAa,EAAhC;;AACA,kBAAmBC,QAAQ,EAA3B;AAAA,MAAQQ,MAAR,aAAQA,MAAR;;AACA,kBAAmBP,QAAQ,EAA3B;AAAA,MAAQQ,MAAR,aAAQA,MAAR;;AAEA,MAAMC,QAAQ,GAAIF,MAAD,CAAgB,OAAhB,CAAjB;;AAEA,kBAAwBd,QAAQ,CAAc,EAAd,CAAhC;AAAA;AAAA,MAAOiB,IAAP;AAAA,MAAaC,OAAb;;AAEAhB,EAAAA,eAAe,CAAC,YAAM;AACpBW,IAAAA,UAAU,CAACM,UAAX,CAAsB;AACpBC,MAAAA,KAAK,EAAEJ,QAAQ,CAACK,IADI;AAEpBC,MAAAA,eAAe,EAAE,OAFG;AAGpBC,MAAAA,gBAAgB,EAAE;AAAA,eAChB,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE,CACLC,UAAU,CAACC,YADN,EAEL;AAAEC,YAAAA,eAAe,EAAEX,MAAM,CAACY;AAA1B,WAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME,oBAAC,KAAD;AACE,UAAA,MAAM,EAAE;AACNC,YAAAA,GAAG,EAAEjB,WAAW,CAACK,QAAQ,CAACa,SAAV;AADV,WADV;AAIE,UAAA,KAAK,EAAE,CAACL,UAAU,CAACC,YAAZ,EAA0B;AAAEK,YAAAA,OAAO,EAAE;AAAX,WAA1B,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,EAYE,oBAAC,cAAD;AACE,UAAA,MAAM,EAAE,CAACd,QAAQ,CAACe,KAAV,EAAiB,aAAjB,CADV;AAEE,UAAA,KAAK,EAAEC,WAAW,CAACC,KAAZ,GAAoB,CAAC,CAAD,EAAI,CAAJ,CAApB,GAA6B,CAAC,CAAD,EAAI,CAAJ,CAFtC;AAGE,UAAA,GAAG,EAAED,WAAW,CAACC,KAAZ,GAAoB,CAAC,CAAD,EAAI,CAAJ,CAApB,GAA6B,CAAC,CAAD,EAAI,CAAJ,CAHpC;AAIE,UAAA,KAAK,EAAE,CAACT,UAAU,CAACC,YAAZ,CAJT;AAKE,UAAA,aAAa,EAAC,MALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZF,CADgB;AAAA;AAHE,KAAtB;AA0BD,GA3Bc,EA2BZ,CAACZ,UAAD,CA3BY,CAAf;AA6BAZ,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,WAAW,CAACyB,gBAAZ,CAA6BlB,QAA7B,EACGmB,IADH,CACQ,UAACC,GAAD;AAAA,aAASlB,OAAO,CAACkB,GAAG,CAACC,IAAL,CAAhB;AAAA,KADR,EAEGC,KAFH,CAES,UAACC,GAAD;AAAA,aAASC,KAAK,CAACD,GAAG,CAACE,OAAL,CAAd;AAAA,KAFT;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE1B,IADR;AAEE,IAAA,sBAAsB,EAAE;AAAA,aAAM,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN;AAAA,KAF1B;AAGE,IAAA,qBAAqB,EAAEyB,MAAM,CAACE,sBAHhC;AAIE,IAAA,4BAA4B,EAAE,KAJhC;AAKE,IAAA,YAAY,EAAE,sBAACC,CAAD,EAAIC,KAAJ;AAAA,iCAAgCA,KAAhC;AAAA,KALhB;AAME,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,QAAGA,IAAH;AAAA,aACV,oBAAC,gBAAD;AACE,QAAA,aAAa,EAAE,GADjB;AAEE,QAAA,OAAO,EAAE;AAAA,iBACPlC,UAAU,CAACmC,IAAX,CAAgBtC,eAAe,CAACuC,gBAAhC,EAAkD;AAChDC,YAAAA,KAAK,oBAAOH,IAAP;AAD2C,WAAlD,CADO;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,oBAAC,oBAAD;AAAsB,QAAA,IAAI,EAAEA,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADU;AAAA,KANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAuBD,CAnEM;AAqEP,IAAML,MAAM,GAAGlB,UAAU,CAAC2B,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AAAES,IAAAA,IAAI,EAAE;AAAR,GADoB;AAE/BR,EAAAA,sBAAsB,EAAE;AAAES,IAAAA,OAAO,EAAE;AAAX;AAFO,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  I18nManager,\n  Image,\n  FlatList,\n  TouchableOpacity,\n} from \"react-native\";\nimport { NewsListItemWideView, Separator } from \"../components\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { useTheme } from \"../theme\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { CategoryModel, NewsModel } from \"../models\";\nimport { NewsService } from \"../services\";\nimport NavigationNames from \"../navigations/NavigationNames\";\nimport { StackNavigationProp } from \"@react-navigation/stack\";\nimport { getImageUrl } from \"../helpers\";\n\nexport const CategoryDetailScreen = () => {\n  const navigation = useNavigation<StackNavigationProp<any>>();\n  const { params } = useRoute();\n  const { colors } = useTheme();\n\n  const category = (params as any)[\"model\"] as CategoryModel;\n\n  const [news, setNews] = useState<NewsModel[]>([]);\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: category.name,\n      headerTintColor: \"white\",\n      headerBackground: () => (\n        <View\n          style={[\n            StyleSheet.absoluteFill,\n            { backgroundColor: colors.windowBackground },\n          ]}\n        >\n          <Image\n            source={{\n              uri: getImageUrl(category.imageName),\n            }}\n            style={[StyleSheet.absoluteFill, { opacity: 0.7 }]}\n          />\n          <LinearGradient\n            colors={[category.color, \"transparent\"]}\n            start={I18nManager.isRTL ? [1, 0] : [0, 1]}\n            end={I18nManager.isRTL ? [0, 1] : [1, 0]}\n            style={[StyleSheet.absoluteFill]}\n            pointerEvents=\"none\"\n          />\n        </View>\n      ),\n    });\n  }, [navigation]);\n\n  useEffect(() => {\n    NewsService.getAllByCategory(category)\n      .then((res) => setNews(res.data))\n      .catch((err) => alert(err.message));\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={news}\n        ItemSeparatorComponent={() => <Separator />}\n        contentContainerStyle={styles.newsListContainerStyle}\n        showsVerticalScrollIndicator={false}\n        keyExtractor={(_, index) => `categoryItemKey${index}`}\n        renderItem={({ item }) => (\n          <TouchableOpacity\n            activeOpacity={0.8}\n            onPress={() =>\n              navigation.push(NavigationNames.NewsDetailScreen, {\n                model: { ...item },\n              })\n            }\n          >\n            <NewsListItemWideView item={item} />\n          </TouchableOpacity>\n        )}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: { flex: 1 },\n  newsListContainerStyle: { padding: 16 },\n});\n"]},"metadata":{},"sourceType":"module"}