{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sumedhreddy/Documents/stealth/stealth-startup/src/screens/HomeScreen.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { Separator, SectionHeader, HomeHeaderView, Divider, HomeHighlightedNewsView, NewsListItemWideView, HomeCategoriesItemView, ScrollableTabBarLayout } from \"../components\";\nimport { useLocalization } from \"../localization\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport SafeAreaView from \"react-native-safe-area-view\";\nimport { useTheme } from \"../theme\";\nimport { DashboardService } from \"../services\";\nimport NavigationNames from \"../navigations/NavigationNames\";\nimport { getImageUrl } from \"../helpers\";\nexport var HomeScreen = function HomeScreen() {\n  var _useLocalization = useLocalization(),\n      getString = _useLocalization.getString;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors,\n      sizes = _useTheme.sizes;\n\n  var navigation = useNavigation();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedCategoryIndex = _useState2[0],\n      setSelectedCategoryIndex = _useState2[1];\n\n  var _useState3 = useState({\n    categories: [],\n    highlightedNews: [],\n    topCategories: [],\n    news: [],\n    stories: []\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dashboardModel = _useState4[0],\n      setDashboardModel = _useState4[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerShown: false\n    });\n  }, [navigation]);\n\n  var fetchDashboardItems = function fetchDashboardItems() {\n    DashboardService.getDashboardItems().then(function (res) {\n      setDashboardModel(res.data);\n    }).catch(function (err) {\n      return alert(err.message);\n    });\n  };\n\n  useEffect(function () {\n    return fetchDashboardItems();\n  }, []);\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    forceInset: {\n      top: \"always\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: false,\n      onRefresh: function onRefresh() {\n        return fetchDashboardItems();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(HomeHeaderView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), React.createElement(Divider, {\n    mh16: true,\n    style: {\n      marginTop: 12\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), React.createElement(FlatList, {\n    data: dashboardModel.stories,\n    horizontal: true,\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(Separator, {\n        horizontal: true,\n        width: 8,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 41\n        }\n      });\n    },\n    contentContainerStyle: styles.flatListDefaultContainerStyle,\n    showsHorizontalScrollIndicator: false,\n    keyExtractor: function keyExtractor(_, index) {\n      return \"storyItemKey\" + index;\n    },\n    renderItem: function renderItem(_ref) {\n      var index = _ref.index,\n          item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(NavigationNames.StoryPreviewScreen, {\n            stories: _toConsumableArray(dashboardModel.stories),\n            selectedIndex: index\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: getImageUrl(item.thumbnailImageName)\n        },\n        style: [styles.storiesItemImage, {\n          borderColor: item.relatedNews.category.color\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), React.createElement(Divider, {\n    mh16: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }), React.createElement(HomeHighlightedNewsView, {\n    news: dashboardModel.highlightedNews,\n    onClickItem: function onClickItem(news) {\n      return navigation.push(NavigationNames.NewsDetailScreen, {\n        model: _objectSpread({}, news)\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), React.createElement(SectionHeader, {\n    title: getString(\"top_categories\"),\n    mTop: 16,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }), React.createElement(FlatList, {\n    data: dashboardModel.topCategories,\n    horizontal: true,\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(Separator, {\n        horizontal: true,\n        width: 12,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 41\n        }\n      });\n    },\n    contentContainerStyle: styles.flatListDefaultContainerStyle,\n    showsHorizontalScrollIndicator: false,\n    keyExtractor: function keyExtractor(_, index) {\n      return \"topCategoryItemKey\" + index;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(HomeCategoriesItemView, {\n        item: item,\n        onSelectedCategory: function onSelectedCategory(category) {\n          navigation.navigate(NavigationNames.SearchTab, {\n            screen: NavigationNames.SearchScreen,\n            params: {\n              category: _objectSpread({}, category)\n            }\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }), React.createElement(SectionHeader, {\n    title: getString(\"latest_news\"),\n    mTop: 16,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }), React.createElement(ScrollableTabBarLayout, {\n    items: [{\n      title: getString(\"today_upper\"),\n      color: colors.primaryColor\n    }].concat(_toConsumableArray(dashboardModel.categories.map(function (item) {\n      return {\n        title: item.name,\n        color: item.color\n      };\n    }))),\n    selectedIndex: selectedCategoryIndex,\n    onChangeSelected: setSelectedCategoryIndex,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }), React.createElement(FlatList, {\n    data: selectedCategoryIndex === 0 ? dashboardModel.news.slice(0, 5) : dashboardModel.news.filter(function (item) {\n      return item.category.name === dashboardModel.categories[selectedCategoryIndex - 1].name;\n    }),\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(Separator, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 41\n        }\n      });\n    },\n    contentContainerStyle: styles.flatListDefaultContainerStyle,\n    showsVerticalScrollIndicator: false,\n    keyExtractor: function keyExtractor(_, index) {\n      return \"newsItemKey\" + index;\n    },\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(TouchableOpacity, {\n        activeOpacity: 0.8,\n        onPress: function onPress() {\n          return navigation.push(NavigationNames.NewsDetailScreen, {\n            model: _objectSpread({}, item)\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }\n      }, React.createElement(NewsListItemWideView, {\n        item: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  })));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  storiesItemImage: {\n    width: 60,\n    height: 60,\n    backgroundColor: \"white\",\n    borderRadius: 80,\n    borderWidth: 1.5\n  },\n  flatListDefaultContainerStyle: {\n    paddingHorizontal: 16,\n    paddingVertical: 12\n  }\n});","map":{"version":3,"sources":["/Users/sumedhreddy/Documents/stealth/stealth-startup/src/screens/HomeScreen.tsx"],"names":["React","useEffect","useLayoutEffect","useState","Separator","SectionHeader","HomeHeaderView","Divider","HomeHighlightedNewsView","NewsListItemWideView","HomeCategoriesItemView","ScrollableTabBarLayout","useLocalization","useNavigation","SafeAreaView","useTheme","DashboardService","NavigationNames","getImageUrl","HomeScreen","getString","colors","sizes","navigation","selectedCategoryIndex","setSelectedCategoryIndex","categories","highlightedNews","topCategories","news","stories","dashboardModel","setDashboardModel","setOptions","headerShown","fetchDashboardItems","getDashboardItems","then","res","data","catch","err","alert","message","styles","container","top","marginTop","flatListDefaultContainerStyle","_","index","item","navigate","StoryPreviewScreen","selectedIndex","uri","thumbnailImageName","storiesItemImage","borderColor","relatedNews","category","color","push","NewsDetailScreen","model","SearchTab","screen","SearchScreen","params","title","primaryColor","map","name","slice","filter","StyleSheet","create","flex","width","height","backgroundColor","borderRadius","borderWidth","paddingHorizontal","paddingVertical"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  FlatList,\n  Image,\n  ScrollView,\n  TouchableOpacity,\n  RefreshControl,\n} from \"react-native\";\nimport {\n  Separator,\n  SectionHeader,\n  HomeHeaderView,\n  Divider,\n  HomeHighlightedNewsView,\n  NewsListItemWideView,\n  HomeCategoriesItemView,\n  ScrollableTabBarLayout,\n} from \"../components\";\nimport { useLocalization } from \"../localization\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport SafeAreaView from \"react-native-safe-area-view\";\nimport { useTheme } from \"../theme\";\nimport { DashboardService } from \"../services\";\nimport {\n  DashboardModel,\n  StoryModel,\n  NewsModel,\n  CategoryModel,\n} from \"../models\";\nimport NavigationNames from \"../navigations/NavigationNames\";\nimport { StackNavigationProp } from \"@react-navigation/stack\";\nimport { getImageUrl } from \"../helpers\";\n\nexport const HomeScreen = () => {\n  const { getString } = useLocalization();\n  const { colors, sizes } = useTheme();\n  const navigation = useNavigation<StackNavigationProp<any>>();\n  const [selectedCategoryIndex, setSelectedCategoryIndex] = useState(0);\n  const [dashboardModel, setDashboardModel] = useState<DashboardModel>({\n    categories: [],\n    highlightedNews: [],\n    topCategories: [],\n    news: [],\n    stories: [],\n  });\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerShown: false,\n    });\n  }, [navigation]);\n\n  const fetchDashboardItems = () => {\n    DashboardService.getDashboardItems()\n      .then((res) => {\n        setDashboardModel(res.data);\n      })\n      .catch((err) => alert(err.message));\n  };\n\n  useEffect(() => fetchDashboardItems(), []);\n\n  return (\n    <SafeAreaView style={styles.container} forceInset={{ top: \"always\" }}>\n      <ScrollView\n        showsVerticalScrollIndicator={false}\n        refreshControl={\n          <RefreshControl\n            refreshing={false}\n            onRefresh={() => fetchDashboardItems()}\n          />\n        }\n      >\n        {/* toolbar */}\n        <HomeHeaderView />\n\n        <Divider mh16 style={{ marginTop: 12 }} />\n\n        {/* Stories */}\n        <FlatList<StoryModel>\n          data={dashboardModel.stories}\n          horizontal\n          ItemSeparatorComponent={() => <Separator horizontal width={8} />}\n          contentContainerStyle={styles.flatListDefaultContainerStyle}\n          showsHorizontalScrollIndicator={false}\n          keyExtractor={(_, index) => `storyItemKey${index}`}\n          renderItem={({ index, item }) => (\n            <TouchableOpacity\n              onPress={() =>\n                navigation.navigate(NavigationNames.StoryPreviewScreen, {\n                  stories: [...dashboardModel.stories],\n                  selectedIndex: index,\n                })\n              }\n            >\n              <Image\n                source={{\n                  uri: getImageUrl(item.thumbnailImageName),\n                }}\n                style={[\n                  styles.storiesItemImage,\n                  {\n                    borderColor: item.relatedNews.category.color,\n                  },\n                ]}\n              />\n            </TouchableOpacity>\n          )}\n        />\n\n        <Divider mh16 />\n\n        {/* Highlighted News */}\n        <HomeHighlightedNewsView\n          news={dashboardModel.highlightedNews}\n          onClickItem={(news) =>\n            navigation.push(NavigationNames.NewsDetailScreen, {\n              model: { ...news },\n            })\n          }\n        />\n\n        {/* Categories */}\n        <SectionHeader title={getString(\"top_categories\")} mTop={16} />\n\n        <FlatList\n          data={dashboardModel.topCategories}\n          horizontal\n          ItemSeparatorComponent={() => <Separator horizontal width={12} />}\n          contentContainerStyle={styles.flatListDefaultContainerStyle}\n          showsHorizontalScrollIndicator={false}\n          keyExtractor={(_, index) => `topCategoryItemKey${index}`}\n          renderItem={({ item }) => (\n            <HomeCategoriesItemView\n              item={item}\n              onSelectedCategory={(category: CategoryModel) => {\n                navigation.navigate(NavigationNames.SearchTab, {\n                  screen: NavigationNames.SearchScreen,\n                  params: { category: { ...category } },\n                });\n              }}\n            />\n          )}\n        />\n\n        {/* Latest News */}\n        <SectionHeader title={getString(\"latest_news\")} mTop={16} />\n\n        <ScrollableTabBarLayout\n          items={[\n            { title: getString(\"today_upper\"), color: colors.primaryColor },\n            ...dashboardModel.categories.map((item) => {\n              return { title: item.name, color: item.color };\n            }),\n          ]}\n          selectedIndex={selectedCategoryIndex}\n          onChangeSelected={setSelectedCategoryIndex}\n        />\n\n        <FlatList<NewsModel>\n          data={\n            selectedCategoryIndex === 0\n              ? dashboardModel.news.slice(0, 5)\n              : dashboardModel.news.filter(\n                (item) =>\n                  item.category.name ===\n                  dashboardModel.categories[selectedCategoryIndex - 1].name\n              )\n          }\n          ItemSeparatorComponent={() => <Separator />}\n          contentContainerStyle={styles.flatListDefaultContainerStyle}\n          showsVerticalScrollIndicator={false}\n          keyExtractor={(_, index) => `newsItemKey${index}`}\n          renderItem={({ item }) => (\n            <TouchableOpacity\n              activeOpacity={0.8}\n              onPress={() =>\n                navigation.push(NavigationNames.NewsDetailScreen, {\n                  model: { ...item },\n                })\n              }\n            >\n              <NewsListItemWideView item={item} />\n            </TouchableOpacity>\n          )}\n        />\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: { flex: 1 },\n  storiesItemImage: {\n    width: 60,\n    height: 60,\n    backgroundColor: \"white\",\n    borderRadius: 80,\n    borderWidth: 1.5,\n  },\n  flatListDefaultContainerStyle: { paddingHorizontal: 16, paddingVertical: 12 },\n});\n"]},"metadata":{},"sourceType":"module"}