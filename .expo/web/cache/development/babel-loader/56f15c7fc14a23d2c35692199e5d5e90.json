{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sumedhreddy/Documents/stealth/stealth-startup/src/presentation/loading/LoadingLayout.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { ThemeContext } from \"../../theme\";\nvar loadingView;\nexport var LoadingManager = {\n  showLoading: function showLoading() {\n    return loadingView.show();\n  },\n  hideLoading: function hideLoading() {\n    return loadingView.hide();\n  },\n  setLoadingView: function setLoadingView(view) {\n    return loadingView = view;\n  }\n};\nexport var LoadingLayout = function (_React$Component) {\n  _inherits(LoadingLayout, _React$Component);\n\n  var _super = _createSuper(LoadingLayout);\n\n  function LoadingLayout() {\n    var _this;\n\n    _classCallCheck(this, LoadingLayout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isShowed: false\n    };\n\n    _this.show = function () {\n      return _this.setState({\n        isShowed: true\n      });\n    };\n\n    _this.hide = function () {\n      return _this.setState({\n        isShowed: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LoadingLayout, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.isShowed) {\n        return null;\n      }\n\n      return React.createElement(View, {\n        style: [StyleSheet.absoluteFill, styles.container],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, React.createElement(ThemeContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, function (theme) {\n        return React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: theme.colors.primaryColor,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }\n        });\n      }));\n    }\n  }]);\n\n  return LoadingLayout;\n}(React.Component);\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#00000010\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    zIndex: 1000\n  }\n});","map":{"version":3,"sources":["/Users/sumedhreddy/Documents/stealth/stealth-startup/src/presentation/loading/LoadingLayout.tsx"],"names":["React","ThemeContext","loadingView","LoadingManager","showLoading","show","hideLoading","hide","setLoadingView","view","LoadingLayout","state","isShowed","setState","StyleSheet","absoluteFill","styles","container","theme","colors","primaryColor","Component","create","backgroundColor","alignItems","justifyContent","zIndex"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,YAAT;AAEA,IAAIC,WAAJ;AAEA,OAAO,IAAMC,cAAc,GAAG;AAC5BC,EAAAA,WAAW,EAAE;AAAA,WAAMF,WAAW,CAACG,IAAZ,EAAN;AAAA,GADe;AAE5BC,EAAAA,WAAW,EAAE;AAAA,WAAMJ,WAAW,CAACK,IAAZ,EAAN;AAAA,GAFe;AAG5BC,EAAAA,cAAc,EAAE,wBAACC,IAAD;AAAA,WAA0BP,WAAW,GAAGO,IAAxC;AAAA;AAHY,CAAvB;AAMP,WAAaC,aAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACEC,KADF,GACU;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADV;;AAAA,UAKEP,IALF,GAKS;AAAA,aAAM,MAAKQ,QAAL,CAAc;AAAED,QAAAA,QAAQ,EAAE;AAAZ,OAAd,CAAN;AAAA,KALT;;AAAA,UAMEL,IANF,GAMS;AAAA,aAAM,MAAKM,QAAL,CAAc;AAAED,QAAAA,QAAQ,EAAE;AAAZ,OAAd,CAAN;AAAA,KANT;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAQE,kBAAS;AAAA;;AACP,UAAI,CAAC,KAAKD,KAAL,CAAWC,QAAhB,EAA0B;AACxB,eAAO,IAAP;AACD;;AACD,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACE,UAAU,CAACC,YAAZ,EAA0BC,MAAM,CAACC,SAAjC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,UAACC,KAAD;AAAA,eACC,oBAAC,iBAAD;AAAmB,UAAA,IAAI,EAAC,OAAxB;AAAgC,UAAA,KAAK,EAAEA,KAAK,CAACC,MAAN,CAAaC,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAAA,OADH,CADF,CADF;AASD;AArBH;;AAAA;AAAA,EAAmCpB,KAAK,CAACqB,SAAzC;AAwBA,IAAML,MAAM,GAAGF,UAAU,CAACQ,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,eAAe,EAAE,WADR;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,MAAM,EAAE;AAJC;AADoB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport { View, ActivityIndicator, StyleSheet } from \"react-native\";\nimport { ThemeContext } from \"../../theme\";\n\nvar loadingView: LoadingLayout;\n\nexport const LoadingManager = {\n  showLoading: () => loadingView.show(),\n  hideLoading: () => loadingView.hide(),\n  setLoadingView: (view: LoadingLayout) => (loadingView = view),\n};\n\nexport class LoadingLayout extends React.Component {\n  state = {\n    isShowed: false,\n  };\n\n  show = () => this.setState({ isShowed: true });\n  hide = () => this.setState({ isShowed: false });\n\n  render() {\n    if (!this.state.isShowed) {\n      return null;\n    }\n    return (\n      <View style={[StyleSheet.absoluteFill, styles.container]}>\n        <ThemeContext.Consumer>\n          {(theme) => (\n            <ActivityIndicator size=\"large\" color={theme.colors.primaryColor} />\n          )}\n        </ThemeContext.Consumer>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#00000010\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    zIndex: 1000,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}