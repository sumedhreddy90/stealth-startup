{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sumedhreddy/Documents/stealth/stealth-startup/src/components/ScrollableTabBarLayout.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Separator } from \"./Separator\";\nimport { useTheme } from \"../theme\";\nimport { Text } from \"./Text\";\nexport var ScrollableTabBarLayout = function ScrollableTabBarLayout(_ref) {\n  var items = _ref.items,\n      _ref$selectedIndex = _ref.selectedIndex,\n      selectedIndex = _ref$selectedIndex === void 0 ? 0 : _ref$selectedIndex,\n      onChangeSelected = _ref.onChangeSelected;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  return React.createElement(FlatList, {\n    data: items,\n    horizontal: true,\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(Separator, {\n        horizontal: true,\n        width: 12,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 37\n        }\n      });\n    },\n    contentContainerStyle: styles.container,\n    showsHorizontalScrollIndicator: false,\n    keyExtractor: function keyExtractor(_, index) {\n      return \"scrollableItemKey\" + index;\n    },\n    renderItem: function renderItem(_ref2) {\n      var index = _ref2.index,\n          item = _ref2.item;\n      var isSelected = index == selectedIndex;\n      var shadow = isSelected && {\n        shadowColor: \"#00000020\",\n        shadowOffset: {\n          height: 2,\n          width: 0\n        },\n        shadowOpacity: 1,\n        shadowRadius: 2,\n        elevation: 2\n      };\n      return React.createElement(TouchableOpacity, {\n        style: _objectSpread({\n          backgroundColor: isSelected ? item.color : \"transparent\",\n          paddingVertical: 4,\n          paddingHorizontal: isSelected ? 16 : 8,\n          borderRadius: 6\n        }, shadow),\n        onPress: function onPress() {\n          return onChangeSelected(index);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          marginTop: 2,\n          fontFamily: \"default-bold\",\n          color: isSelected ? \"white\" : colors.lightgray\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, item.title));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    marginTop: 4\n  }\n});","map":{"version":3,"sources":["/Users/sumedhreddy/Documents/stealth/stealth-startup/src/components/ScrollableTabBarLayout.tsx"],"names":["React","Separator","useTheme","Text","ScrollableTabBarLayout","items","selectedIndex","onChangeSelected","colors","styles","container","_","index","item","isSelected","shadow","shadowColor","shadowOffset","height","width","shadowOpacity","shadowRadius","elevation","backgroundColor","color","paddingVertical","paddingHorizontal","borderRadius","marginTop","fontFamily","lightgray","title","StyleSheet","create"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,SAAT;AACA,SAASC,QAAT;AACA,SAASC,IAAT;AAWA,OAAO,IAAMC,sBAAwC,GAAG,SAA3CA,sBAA2C,OAIlD;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,gCAFJC,aAEI;AAAA,MAFJA,aAEI,mCAFY,CAEZ;AAAA,MADJC,gBACI,QADJA,gBACI;;AACJ,kBAAmBL,QAAQ,EAA3B;AAAA,MAAQM,MAAR,aAAQA,MAAR;;AACA,SACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEH,KADR;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,sBAAsB,EAAE;AAAA,aAAM,oBAAC,SAAD;AAAW,QAAA,UAAU,MAArB;AAAsB,QAAA,KAAK,EAAE,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN;AAAA,KAH1B;AAIE,IAAA,qBAAqB,EAAEI,MAAM,CAACC,SAJhC;AAKE,IAAA,8BAA8B,EAAE,KALlC;AAME,IAAA,YAAY,EAAE,sBAACC,CAAD,EAAIC,KAAJ;AAAA,mCAAkCA,KAAlC;AAAA,KANhB;AAOE,IAAA,UAAU,EAAE,2BAAqB;AAAA,UAAlBA,KAAkB,SAAlBA,KAAkB;AAAA,UAAXC,IAAW,SAAXA,IAAW;AAC/B,UAAMC,UAAU,GAAGF,KAAK,IAAIN,aAA5B;AAEA,UAAMS,MAAM,GAAGD,UAAU,IAAI;AAC3BE,QAAAA,WAAW,EAAE,WADc;AAE3BC,QAAAA,YAAY,EAAE;AACZC,UAAAA,MAAM,EAAE,CADI;AAEZC,UAAAA,KAAK,EAAE;AAFK,SAFa;AAM3BC,QAAAA,aAAa,EAAE,CANY;AAO3BC,QAAAA,YAAY,EAAE,CAPa;AAQ3BC,QAAAA,SAAS,EAAE;AARgB,OAA7B;AAWA,aACE,oBAAC,gBAAD;AACE,QAAA,KAAK;AACHC,UAAAA,eAAe,EAAET,UAAU,GAAGD,IAAI,CAACW,KAAR,GAAgB,aADxC;AAEHC,UAAAA,eAAe,EAAE,CAFd;AAGHC,UAAAA,iBAAiB,EAAEZ,UAAU,GAAG,EAAH,GAAQ,CAHlC;AAIHa,UAAAA,YAAY,EAAE;AAJX,WAKAZ,MALA,CADP;AAQE,QAAA,OAAO,EAAE;AAAA,iBAAMR,gBAAgB,CAACK,KAAD,CAAtB;AAAA,SARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLgB,UAAAA,SAAS,EAAE,CADN;AAELC,UAAAA,UAAU,EAAE,cAFP;AAGLL,UAAAA,KAAK,EAAEV,UAAU,GAAG,OAAH,GAAaN,MAAM,CAACsB;AAHhC,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGjB,IAAI,CAACkB,KAPR,CAVF,CADF;AAsBD,KA3CH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA+CD,CArDM;AAuDP,IAAMtB,MAAM,GAAGuB,UAAU,CAACC,MAAX,CAAkB;AAC/BvB,EAAAA,SAAS,EAAE;AACTgB,IAAAA,iBAAiB,EAAE,EADV;AAETD,IAAAA,eAAe,EAAE,CAFR;AAGTG,IAAAA,SAAS,EAAE;AAHF;AADoB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport { View, FlatList, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Separator } from \"./Separator\";\nimport { useTheme } from \"../theme\";\nimport { Text } from \"./Text\";\n\ntype TProps = {\n  items: {\n    title: string;\n    color: string;\n  }[];\n  selectedIndex: number;\n  onChangeSelected: (index: number) => void;\n};\n\nexport const ScrollableTabBarLayout: React.FC<TProps> = ({\n  items,\n  selectedIndex = 0,\n  onChangeSelected,\n}) => {\n  const { colors } = useTheme();\n  return (\n    <FlatList\n      data={items}\n      horizontal\n      ItemSeparatorComponent={() => <Separator horizontal width={12} />}\n      contentContainerStyle={styles.container}\n      showsHorizontalScrollIndicator={false}\n      keyExtractor={(_, index) => `scrollableItemKey${index}`}\n      renderItem={({ index, item }) => {\n        const isSelected = index == selectedIndex;\n\n        const shadow = isSelected && {\n          shadowColor: \"#00000020\",\n          shadowOffset: {\n            height: 2,\n            width: 0,\n          },\n          shadowOpacity: 1,\n          shadowRadius: 2,\n          elevation: 2,\n        };\n\n        return (\n          <TouchableOpacity\n            style={{\n              backgroundColor: isSelected ? item.color : \"transparent\",\n              paddingVertical: 4,\n              paddingHorizontal: isSelected ? 16 : 8,\n              borderRadius: 6,\n              ...shadow,\n            }}\n            onPress={() => onChangeSelected(index)}\n          >\n            <Text\n              style={{\n                marginTop: 2,\n                fontFamily: \"default-bold\",\n                color: isSelected ? \"white\" : colors.lightgray,\n              }}\n            >\n              {item.title}\n            </Text>\n          </TouchableOpacity>\n        );\n      }}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    marginTop: 4,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}