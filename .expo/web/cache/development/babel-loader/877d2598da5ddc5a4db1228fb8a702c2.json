{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sumedhreddy/Documents/stealth/stealth-startup/src/screens/NewsCommentsScreen.tsx\";\n\nimport React, { useState, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation, useRoute, useFocusEffect } from \"@react-navigation/native\";\nimport { NewsCommentItemView, Divider, Text } from \"../components\";\nimport { useTheme } from \"../theme\";\nimport NavigationNames from \"../navigations/NavigationNames\";\nimport { NewsCommentService } from \"../services\";\nimport { useLocalization } from \"../localization\";\nimport { AuthenticationContext } from \"../context\";\nexport var NewsCommentsScreen = function NewsCommentsScreen() {\n  var navigation = useNavigation();\n\n  var _useRoute = useRoute(),\n      params = _useRoute.params;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors,\n      sizes = _useTheme.sizes;\n\n  var _useLocalization = useLocalization(),\n      getString = _useLocalization.getString;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var authContext = useContext(AuthenticationContext);\n  var newsId = params[\"newsId\"];\n  useFocusEffect(React.useCallback(function () {\n    NewsCommentService.getAll(newsId).then(function (res) {\n      setComments(res.data);\n    });\n  }, [newsId]));\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: comments,\n    keyExtractor: function keyExtractor(_, index) {\n      return \"commentItemKey\" + index;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(NewsCommentItemView, {\n        item: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 35\n        }\n      });\n    },\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(Divider, {\n        mh16: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 39\n        }\n      });\n    },\n    contentContainerStyle: {\n      paddingVertical: 4\n    },\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: {\n      paddingVertical: 16,\n      paddingHorizontal: 16\n    },\n    onPress: function onPress() {\n      if (authContext.isLoggedIn) {\n        navigation.navigate(NavigationNames.WriteCommentScreen, {\n          newsId: newsId\n        });\n      } else {\n        navigation.navigate(NavigationNames.RootLoginScreen);\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: colors.gray\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, getString(\"write_comment\"))));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/sumedhreddy/Documents/stealth/stealth-startup/src/screens/NewsCommentsScreen.tsx"],"names":["React","useState","useContext","useNavigation","useRoute","useFocusEffect","NewsCommentItemView","Divider","Text","useTheme","NavigationNames","NewsCommentService","useLocalization","AuthenticationContext","NewsCommentsScreen","navigation","params","colors","sizes","getString","comments","setComments","authContext","newsId","useCallback","getAll","then","res","data","styles","container","_","index","item","paddingVertical","flex","paddingHorizontal","isLoggedIn","navigate","WriteCommentScreen","RootLoginScreen","color","gray","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { View, StyleSheet, FlatList, TouchableOpacity } from \"react-native\";\nimport {\n  useNavigation,\n  useRoute,\n  useFocusEffect,\n} from \"@react-navigation/native\";\nimport { NewsCommentModel } from \"../models\";\nimport { NewsCommentItemView, Divider, Text } from \"../components\";\nimport { useTheme } from \"../theme\";\nimport NavigationNames from \"../navigations/NavigationNames\";\nimport { NewsCommentService } from \"../services\";\nimport { useLocalization } from \"../localization\";\nimport { AuthenticationContext } from \"../context\";\n\nexport const NewsCommentsScreen = () => {\n  const navigation = useNavigation();\n  const { params } = useRoute();\n  const { colors, sizes } = useTheme();\n  const { getString } = useLocalization();\n  const [comments, setComments] = useState<NewsCommentModel[]>([]);\n  const authContext = useContext(AuthenticationContext);\n\n  const newsId = (params as any)[\"newsId\"];\n\n  useFocusEffect(\n    React.useCallback(() => {\n      NewsCommentService.getAll(newsId).then((res) => {\n        setComments(res.data);\n      });\n    }, [newsId])\n  );\n\n  return (\n    <View style={styles.container}>\n      <FlatList<NewsCommentModel>\n        data={comments}\n        keyExtractor={(_, index) => `commentItemKey${index}`}\n        renderItem={({ item }) => <NewsCommentItemView item={item} />}\n        ItemSeparatorComponent={() => <Divider mh16 />}\n        contentContainerStyle={{ paddingVertical: 4 }}\n        style={{ flex: 1 }}\n      />\n      <Divider />\n      <TouchableOpacity\n        style={{ paddingVertical: 16, paddingHorizontal: 16 }}\n        onPress={() => {\n          if (authContext.isLoggedIn) {\n            navigation.navigate(NavigationNames.WriteCommentScreen, {\n              newsId: newsId,\n            });\n          } else {\n            navigation.navigate(NavigationNames.RootLoginScreen);\n          }\n        }}\n      >\n        <Text style={{ color: colors.gray }}>{getString(\"write_comment\")}</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: { flex: 1 },\n});\n"]},"metadata":{},"sourceType":"module"}