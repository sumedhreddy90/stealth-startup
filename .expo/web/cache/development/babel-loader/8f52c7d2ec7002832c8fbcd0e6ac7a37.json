{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sumedhreddy/Documents/stealth/stealth-startup/src/components/TextInput.tsx\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport RNTextInput from \"react-native-web/dist/exports/TextInput\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { useTheme } from \"../theme\";\nexport var TextInput = React.forwardRef(function (_ref, ref) {\n  var inputProps = _ref.inputProps,\n      style = _ref.style;\n\n  var _useTheme = useTheme(),\n      isDark = _useTheme.isDark,\n      colors = _useTheme.colors,\n      sizes = _useTheme.sizes;\n\n  return React.createElement(View, {\n    style: [styles.container, {\n      borderColor: colors.borderColor,\n      backgroundColor: colors.windowBackground,\n      shadowColor: isDark ? \"#FFFFFF10\" : \"#00000010\"\n    }, style],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, React.createElement(RNTextInput, _extends({\n    ref: ref\n  }, inputProps, {\n    style: [styles.input, {\n      height: sizes.inputHeight,\n      color: colors.textColor\n    }, inputProps == null ? void 0 : inputProps.style],\n    placeholderTextColor: colors.gray,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })));\n});\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: 12,\n    borderWidth: 0.5,\n    shadowOpacity: 1,\n    shadowRadius: 4,\n    elevation: 4,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    }\n  },\n  input: {\n    fontSize: 15,\n    paddingHorizontal: 16,\n    fontFamily: \"default-medium\",\n    writingDirection: I18nManager.isRTL ? \"rtl\" : \"ltr\"\n  }\n});","map":{"version":3,"sources":["/Users/sumedhreddy/Documents/stealth/stealth-startup/src/components/TextInput.tsx"],"names":["React","useTheme","TextInput","forwardRef","ref","inputProps","style","isDark","colors","sizes","styles","container","borderColor","backgroundColor","windowBackground","shadowColor","input","height","inputHeight","color","textColor","gray","StyleSheet","create","borderRadius","borderWidth","shadowOpacity","shadowRadius","elevation","shadowOffset","width","fontSize","paddingHorizontal","fontFamily","writingDirection","I18nManager","isRTL"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAUA,SAASC,QAAT;AAOA,OAAO,IAAMC,SAAS,GAAGF,KAAK,CAACG,UAAN,CACvB,gBAAwBC,GAAxB,EAAgC;AAAA,MAA7BC,UAA6B,QAA7BA,UAA6B;AAAA,MAAjBC,KAAiB,QAAjBA,KAAiB;;AAC9B,kBAAkCL,QAAQ,EAA1C;AAAA,MAAQM,MAAR,aAAQA,MAAR;AAAA,MAAgBC,MAAhB,aAAgBA,MAAhB;AAAA,MAAwBC,KAAxB,aAAwBA,KAAxB;;AACA,SACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLC,MAAM,CAACC,SADF,EAEL;AACEC,MAAAA,WAAW,EAAEJ,MAAM,CAACI,WADtB;AAEEC,MAAAA,eAAe,EAAEL,MAAM,CAACM,gBAF1B;AAGEC,MAAAA,WAAW,EAAER,MAAM,GAAG,WAAH,GAAiB;AAHtC,KAFK,EAOLD,KAPK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEF;AADP,KAEMC,UAFN;AAGE,IAAA,KAAK,EAAE,CACLK,MAAM,CAACM,KADF,EAEL;AAAEC,MAAAA,MAAM,EAAER,KAAK,CAACS,WAAhB;AAA6BC,MAAAA,KAAK,EAAEX,MAAM,CAACY;AAA3C,KAFK,EAGLf,UAHK,oBAGLA,UAAU,CAAEC,KAHP,CAHT;AAQE,IAAA,oBAAoB,EAAEE,MAAM,CAACa,IAR/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAXF,CADF;AAwBD,CA3BsB,CAAlB;AA8BP,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC/BZ,EAAAA,SAAS,EAAE;AACTa,IAAAA,YAAY,EAAE,EADL;AAETC,IAAAA,WAAW,EAAE,GAFJ;AAGTC,IAAAA,aAAa,EAAE,CAHN;AAITC,IAAAA,YAAY,EAAE,CAJL;AAKTC,IAAAA,SAAS,EAAE,CALF;AAMTC,IAAAA,YAAY,EAAE;AACZC,MAAAA,KAAK,EAAE,CADK;AAEZb,MAAAA,MAAM,EAAE;AAFI;AANL,GADoB;AAY/BD,EAAAA,KAAK,EAAE;AACLe,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,iBAAiB,EAAE,EAFd;AAGLC,IAAAA,UAAU,EAAE,gBAHP;AAILC,IAAAA,gBAAgB,EAAEC,WAAW,CAACC,KAAZ,GAAoB,KAApB,GAA4B;AAJzC;AAZwB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport {\n  View,\n  StyleSheet,\n  StyleProp,\n  ViewStyle,\n  TextInput as RNTextInput,\n  TextInputProps,\n  I18nManager,\n} from \"react-native\";\nimport { useTheme } from \"../theme\";\n\ntype TProps = {\n  style?: StyleProp<ViewStyle>;\n  inputProps?: TextInputProps;\n};\n\nexport const TextInput = React.forwardRef<RNTextInput, TProps>(\n  ({ inputProps, style }, ref) => {\n    const { isDark, colors, sizes } = useTheme();\n    return (\n      <View\n        style={[\n          styles.container,\n          {\n            borderColor: colors.borderColor,\n            backgroundColor: colors.windowBackground,\n            shadowColor: isDark ? \"#FFFFFF10\" : \"#00000010\",\n          },\n          style,\n        ]}\n      >\n        <RNTextInput\n          ref={ref}\n          {...inputProps}\n          style={[\n            styles.input,\n            { height: sizes.inputHeight, color: colors.textColor },\n            inputProps?.style,\n          ]}\n          placeholderTextColor={colors.gray}\n        />\n      </View>\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 12,\n    borderWidth: 0.5,\n    shadowOpacity: 1,\n    shadowRadius: 4,\n    elevation: 4,\n    shadowOffset: {\n      width: 0,\n      height: 4,\n    },\n  },\n  input: {\n    fontSize: 15,\n    paddingHorizontal: 16,\n    fontFamily: \"default-medium\",\n    writingDirection: I18nManager.isRTL ? \"rtl\" : \"ltr\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}