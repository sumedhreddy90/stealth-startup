{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\n\nvar getAppSettings = function getAppSettings() {\n  return _regeneratorRuntime.async(function getAppSettings$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"appsettings\"));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default {\n  getAppSettings: getAppSettings\n};","map":{"version":3,"sources":["/Users/sumedhreddy/Documents/stealth/stealth-startup/src/services/AppSettingsService.ts"],"names":["axios","getAppSettings","get"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACRD,KAAK,CAACE,GAAN,CAA4B,aAA5B,CADQ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAIA,eAAe;AACbD,EAAAA,cAAc,EAAdA;AADa,CAAf","sourcesContent":["import axios from \"axios\";\n\nimport { AppSettingsModel } from \"../models\";\n\nconst getAppSettings = async () => {\n  return await axios.get<AppSettingsModel>(\"appsettings\");\n};\n\nexport default {\n  getAppSettings,\n};\n"]},"metadata":{},"sourceType":"module"}