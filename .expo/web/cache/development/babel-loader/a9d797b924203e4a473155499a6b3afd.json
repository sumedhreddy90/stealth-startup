{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/sumedhreddy/Documents/stealth/stealth-startup/src/components/TouchableHighlight.tsx\";\n\nimport React from \"react\";\nimport { TouchableHighlight as RCTouchableHighlight } from \"react-native-gesture-handler\";\nimport { useTheme } from \"../theme\";\nexport var TouchableHighlight = function TouchableHighlight(props) {\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  return React.createElement(RCTouchableHighlight, {\n    underlayColor: props.underlayColor || colors.touchableHighlightUnderlayColor,\n    onPress: props.onPress,\n    style: props.style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/sumedhreddy/Documents/stealth/stealth-startup/src/components/TouchableHighlight.tsx"],"names":["React","TouchableHighlight","RCTouchableHighlight","useTheme","props","colors","underlayColor","touchableHighlightUnderlayColor","onPress","style","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,kBAAkB,IAAIC,oBAA/B,QAA2D,8BAA3D;AACA,SAASC,QAAT;AAQA,OAAO,IAAMF,kBAAoC,GAAG,SAAvCA,kBAAuC,CAACG,KAAD,EAAW;AAC7D,kBAAmBD,QAAQ,EAA3B;AAAA,MAAQE,MAAR,aAAQA,MAAR;;AACA,SACE,oBAAC,oBAAD;AACE,IAAA,aAAa,EACXD,KAAK,CAACE,aAAN,IAAuBD,MAAM,CAACE,+BAFlC;AAIE,IAAA,OAAO,EAAEH,KAAK,CAACI,OAJjB;AAKE,IAAA,KAAK,EAAEJ,KAAK,CAACK,KALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGL,KAAK,CAACM,QAPT,CADF;AAWD,CAbM","sourcesContent":["import React from \"react\";\nimport { GestureResponderEvent, StyleProp, ViewStyle } from \"react-native\";\nimport { TouchableHighlight as RCTouchableHighlight } from \"react-native-gesture-handler\";\nimport { useTheme } from \"../theme\";\n\ntype TProps = {\n  underlayColor?: string;\n  onPress?: (event: GestureResponderEvent) => void;\n  style?: StyleProp<ViewStyle>;\n};\n\nexport const TouchableHighlight: React.FC<TProps> = (props) => {\n  const { colors } = useTheme();\n  return (\n    <RCTouchableHighlight\n      underlayColor={\n        props.underlayColor || colors.touchableHighlightUnderlayColor\n      }\n      onPress={props.onPress}\n      style={props.style}\n    >\n      {props.children}\n    </RCTouchableHighlight>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}