{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sumedhreddy/Documents/stealth/stealth-startup/src/screens/SearchScreen.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TextInput, SectionHeader, Separator, SearchCategoryItemView, NewsListItemWideView, Text } from \"../components\";\nimport SafeAreaView from \"react-native-safe-area-view\";\nimport { CategoryService, NewsService } from \"../services\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport NavigationNames from \"../navigations/NavigationNames\";\nimport { useLocalization } from \"../localization\";\nexport var SearchScreen = function SearchScreen() {\n  var navigation = useNavigation();\n\n  var _useLocalization = useLocalization(),\n      getString = _useLocalization.getString;\n\n  var _useRoute = useRoute(),\n      params = _useRoute.params;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      categories = _useState2[0],\n      setCategories = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchText = _useState4[0],\n      setSearchText = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchedNews = _useState6[0],\n      setSearchedNews = _useState6[1];\n\n  var searchNews = function searchNews() {\n    if (searchText === \"\") {\n      setSearchedNews([]);\n      return;\n    }\n\n    NewsService.search(searchText).then(function (res) {\n      return setSearchedNews(res.data);\n    }).catch(function (err) {\n      return alert(err.message);\n    });\n  };\n\n  useEffect(function () {\n    CategoryService.getCategories().then(function (res) {\n      return setCategories(res.data);\n    });\n\n    if (params) {\n      var category = params[\"category\"];\n\n      if (category) {\n        navigation.navigate(NavigationNames.CategoryDetailScreen, {\n          model: _objectSpread({}, category)\n        });\n      }\n    }\n  }, [params]);\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    forceInset: {\n      top: \"always\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    inputProps: {\n      placeholder: getString(\"search\"),\n      value: searchText,\n      returnKeyType: \"search\",\n      onChangeText: setSearchText,\n      onSubmitEditing: searchNews\n    },\n    style: styles.searchInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), searchText === \"\" ? React.createElement(FlatList, {\n    data: categories,\n    ListHeaderComponent: function ListHeaderComponent() {\n      return React.createElement(SectionHeader, {\n        title: getString(\"all_categories\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      });\n    },\n    ListHeaderComponentStyle: {\n      paddingBottom: 12\n    },\n    contentContainerStyle: {\n      paddingVertical: 12\n    },\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(Separator, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 41\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(_, index) {\n      return \"categoryItemKey\" + index;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(SearchCategoryItemView, {\n        item: item,\n        onSelectedCategory: function onSelectedCategory(category) {\n          return navigation.navigate(NavigationNames.CategoryDetailScreen, {\n            model: _objectSpread({}, category)\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }) : React.createElement(FlatList, {\n    data: searchedNews,\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(Separator, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 41\n        }\n      });\n    },\n    contentContainerStyle: styles.newsListContainerStyle,\n    showsVerticalScrollIndicator: false,\n    keyExtractor: function keyExtractor(_, index) {\n      return \"newsItemKey\" + index;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        activeOpacity: 0.8,\n        onPress: function onPress() {\n          return navigation.push(NavigationNames.NewsDetailScreen, {\n            model: _objectSpread({}, item)\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, React.createElement(NewsListItemWideView, {\n        item: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      }));\n    },\n    ListEmptyComponent: function ListEmptyComponent() {\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 37\n        }\n      }, getString(\"not_found_news\"));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  searchInput: {\n    marginHorizontal: 16,\n    marginVertical: 16\n  },\n  newsListContainerStyle: {\n    padding: 16\n  }\n});","map":{"version":3,"sources":["/Users/sumedhreddy/Documents/stealth/stealth-startup/src/screens/SearchScreen.tsx"],"names":["React","useState","useEffect","TextInput","SectionHeader","Separator","SearchCategoryItemView","NewsListItemWideView","Text","SafeAreaView","CategoryService","NewsService","useNavigation","useRoute","NavigationNames","useLocalization","SearchScreen","navigation","getString","params","categories","setCategories","searchText","setSearchText","searchedNews","setSearchedNews","searchNews","search","then","res","data","catch","err","alert","message","getCategories","category","navigate","CategoryDetailScreen","model","styles","container","top","placeholder","value","returnKeyType","onChangeText","onSubmitEditing","searchInput","paddingBottom","paddingVertical","_","index","item","newsListContainerStyle","push","NewsDetailScreen","StyleSheet","create","flex","marginHorizontal","marginVertical","padding"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,SACEC,SADF,EAEEC,aAFF,EAGEC,SAHF,EAIEC,sBAJF,EAKEC,oBALF,EAMEC,IANF;AAQA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,SAASC,eAAT,EAA0BC,WAA1B;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,0BAAxC;AACA,OAAOC,eAAP;AACA,SAASC,eAAT;AAGA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC,MAAMC,UAAU,GAAGL,aAAa,EAAhC;;AACA,yBAAsBG,eAAe,EAArC;AAAA,MAAQG,SAAR,oBAAQA,SAAR;;AACA,kBAAmBL,QAAQ,EAA3B;AAAA,MAAQM,MAAR,aAAQA,MAAR;;AACA,kBAAoClB,QAAQ,CAAkB,EAAlB,CAA5C;AAAA;AAAA,MAAOmB,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAoCpB,QAAQ,CAAS,EAAT,CAA5C;AAAA;AAAA,MAAOqB,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAwCtB,QAAQ,CAAc,EAAd,CAAhD;AAAA;AAAA,MAAOuB,YAAP;AAAA,MAAqBC,eAArB;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAIJ,UAAU,KAAK,EAAnB,EAAuB;AACrBG,MAAAA,eAAe,CAAC,EAAD,CAAf;AACA;AACD;;AACDd,IAAAA,WAAW,CAACgB,MAAZ,CAAmBL,UAAnB,EACGM,IADH,CACQ,UAACC,GAAD;AAAA,aAASJ,eAAe,CAACI,GAAG,CAACC,IAAL,CAAxB;AAAA,KADR,EAEGC,KAFH,CAES,UAACC,GAAD;AAAA,aAASC,KAAK,CAACD,GAAG,CAACE,OAAL,CAAd;AAAA,KAFT;AAGD,GARD;;AAUAhC,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,eAAe,CAACyB,aAAhB,GAAgCP,IAAhC,CAAqC,UAACC,GAAD;AAAA,aAASR,aAAa,CAACQ,GAAG,CAACC,IAAL,CAAtB;AAAA,KAArC;;AAEA,QAAIX,MAAJ,EAAY;AACV,UAAMiB,QAAQ,GAAIjB,MAAD,CAAgB,UAAhB,CAAjB;;AACA,UAAIiB,QAAJ,EAAc;AACZnB,QAAAA,UAAU,CAACoB,QAAX,CAAoBvB,eAAe,CAACwB,oBAApC,EAA0D;AACxDC,UAAAA,KAAK,oBAAOH,QAAP;AADmD,SAA1D;AAGD;AACF;AACF,GAXQ,EAWN,CAACjB,MAAD,CAXM,CAAT;AAaA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEqB,MAAM,CAACC,SAA5B;AAAuC,IAAA,UAAU,EAAE;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,UAAU,EAAE;AACVC,MAAAA,WAAW,EAAEzB,SAAS,CAAC,QAAD,CADZ;AAEV0B,MAAAA,KAAK,EAAEtB,UAFG;AAGVuB,MAAAA,aAAa,EAAE,QAHL;AAIVC,MAAAA,YAAY,EAAEvB,aAJJ;AAKVwB,MAAAA,eAAe,EAAErB;AALP,KADd;AAQE,IAAA,KAAK,EAAEc,MAAM,CAACQ,WARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAYG1B,UAAU,KAAK,EAAf,GACC,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEF,UADR;AAEE,IAAA,mBAAmB,EAAE;AAAA,aACnB,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAEF,SAAS,CAAC,gBAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADmB;AAAA,KAFvB;AAKE,IAAA,wBAAwB,EAAE;AACxB+B,MAAAA,aAAa,EAAE;AADS,KAL5B;AAQE,IAAA,qBAAqB,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KARzB;AASE,IAAA,sBAAsB,EAAE;AAAA,aAAM,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN;AAAA,KAT1B;AAUE,IAAA,YAAY,EAAE,sBAACC,CAAD,EAAIC,KAAJ;AAAA,iCAAgCA,KAAhC;AAAA,KAVhB;AAWE,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,QAAGA,IAAH;AAAA,aACV,oBAAC,sBAAD;AACE,QAAA,IAAI,EAAEA,IADR;AAEE,QAAA,kBAAkB,EAAE,4BAACjB,QAAD;AAAA,iBAClBnB,UAAU,CAACoB,QAAX,CAAoBvB,eAAe,CAACwB,oBAApC,EAA0D;AACxDC,YAAAA,KAAK,oBAAOH,QAAP;AADmD,WAA1D,CADkB;AAAA,SAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU;AAAA,KAXd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAwBC,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEZ,YADR;AAEE,IAAA,sBAAsB,EAAE;AAAA,aAAM,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN;AAAA,KAF1B;AAGE,IAAA,qBAAqB,EAAEgB,MAAM,CAACc,sBAHhC;AAIE,IAAA,4BAA4B,EAAE,KAJhC;AAKE,IAAA,YAAY,EAAE,sBAACH,CAAD,EAAIC,KAAJ;AAAA,6BAA4BA,KAA5B;AAAA,KALhB;AAME,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,gBAAD;AACE,QAAA,aAAa,EAAE,GADjB;AAEE,QAAA,OAAO,EAAE;AAAA,iBACPpC,UAAU,CAACsC,IAAX,CAAgBzC,eAAe,CAAC0C,gBAAhC,EAAkD;AAChDjB,YAAAA,KAAK,oBAAOc,IAAP;AAD2C,WAAlD,CADO;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,oBAAC,oBAAD;AAAsB,QAAA,IAAI,EAAEA,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADU;AAAA,KANd;AAkBE,IAAA,kBAAkB,EAAE;AAAA,aAAM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOnC,SAAS,CAAC,gBAAD,CAAhB,CAAN;AAAA,KAlBtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCJ,CADF;AA4DD,CA3FM;AA6FP,IAAMsB,MAAM,GAAGiB,UAAU,CAACC,MAAX,CAAkB;AAC/BjB,EAAAA,SAAS,EAAE;AAAEkB,IAAAA,IAAI,EAAE;AAAR,GADoB;AAE/BX,EAAAA,WAAW,EAAE;AACXY,IAAAA,gBAAgB,EAAE,EADP;AAEXC,IAAAA,cAAc,EAAE;AAFL,GAFkB;AAM/BP,EAAAA,sBAAsB,EAAE;AAAEQ,IAAAA,OAAO,EAAE;AAAX;AANO,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, FlatList, TouchableOpacity } from \"react-native\";\nimport {\n  TextInput,\n  SectionHeader,\n  Separator,\n  SearchCategoryItemView,\n  NewsListItemWideView,\n  Text,\n} from \"../components\";\nimport SafeAreaView from \"react-native-safe-area-view\";\nimport { CategoryModel, NewsModel } from \"../models\";\nimport { CategoryService, NewsService } from \"../services\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport NavigationNames from \"../navigations/NavigationNames\";\nimport { useLocalization } from \"../localization\";\nimport { StackNavigationProp } from \"@react-navigation/stack\";\n\nexport const SearchScreen = () => {\n  const navigation = useNavigation<StackNavigationProp<any>>();\n  const { getString } = useLocalization();\n  const { params } = useRoute();\n  const [categories, setCategories] = useState<CategoryModel[]>([]);\n  const [searchText, setSearchText] = useState<string>(\"\");\n  const [searchedNews, setSearchedNews] = useState<NewsModel[]>([]);\n\n  const searchNews = () => {\n    if (searchText === \"\") {\n      setSearchedNews([]);\n      return;\n    }\n    NewsService.search(searchText)\n      .then((res) => setSearchedNews(res.data))\n      .catch((err) => alert(err.message));\n  };\n\n  useEffect(() => {\n    CategoryService.getCategories().then((res) => setCategories(res.data));\n\n    if (params) {\n      const category = (params as any)[\"category\"];\n      if (category) {\n        navigation.navigate(NavigationNames.CategoryDetailScreen, {\n          model: { ...category },\n        });\n      }\n    }\n  }, [params]);\n\n  return (\n    <SafeAreaView style={styles.container} forceInset={{ top: \"always\" }}>\n      <TextInput\n        inputProps={{\n          placeholder: getString(\"search\"),\n          value: searchText,\n          returnKeyType: \"search\",\n          onChangeText: setSearchText,\n          onSubmitEditing: searchNews,\n        }}\n        style={styles.searchInput}\n      />\n\n      {searchText === \"\" ? (\n        <FlatList<CategoryModel>\n          data={categories}\n          ListHeaderComponent={() => (\n            <SectionHeader title={getString(\"all_categories\")} />\n          )}\n          ListHeaderComponentStyle={{\n            paddingBottom: 12,\n          }}\n          contentContainerStyle={{ paddingVertical: 12 }}\n          ItemSeparatorComponent={() => <Separator />}\n          keyExtractor={(_, index) => `categoryItemKey${index}`}\n          renderItem={({ item }) => (\n            <SearchCategoryItemView\n              item={item}\n              onSelectedCategory={(category: CategoryModel) =>\n                navigation.navigate(NavigationNames.CategoryDetailScreen, {\n                  model: { ...category },\n                })\n              }\n            />\n          )}\n        />\n      ) : (\n        <FlatList\n          data={searchedNews}\n          ItemSeparatorComponent={() => <Separator />}\n          contentContainerStyle={styles.newsListContainerStyle}\n          showsVerticalScrollIndicator={false}\n          keyExtractor={(_, index) => `newsItemKey${index}`}\n          renderItem={({ item }) => (\n            <TouchableOpacity\n              activeOpacity={0.8}\n              onPress={() =>\n                navigation.push(NavigationNames.NewsDetailScreen, {\n                  model: { ...item },\n                })\n              }\n            >\n              <NewsListItemWideView item={item} />\n            </TouchableOpacity>\n          )}\n          ListEmptyComponent={() => <Text>{getString(\"not_found_news\")}</Text>}\n        />\n      )}\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: { flex: 1 },\n  searchInput: {\n    marginHorizontal: 16,\n    marginVertical: 16,\n  },\n  newsListContainerStyle: { padding: 16 },\n});\n"]},"metadata":{},"sourceType":"module"}