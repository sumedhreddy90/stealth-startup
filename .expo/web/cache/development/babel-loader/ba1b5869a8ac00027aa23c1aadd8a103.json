{"ast":null,"code":"export var lightenDarkenColor = function lightenDarkenColor(colorCode, amount) {\n  var usePound = false;\n\n  if (colorCode[0] == \"#\") {\n    colorCode = colorCode.slice(1);\n    usePound = true;\n  }\n\n  var num = parseInt(colorCode, 16);\n  var r = (num >> 16) + amount;\n\n  if (r > 255) {\n    r = 255;\n  } else if (r < 0) {\n    r = 0;\n  }\n\n  var b = (num >> 8 & 0x00ff) + amount;\n\n  if (b > 255) {\n    b = 255;\n  } else if (b < 0) {\n    b = 0;\n  }\n\n  var g = (num & 0x0000ff) + amount;\n\n  if (g > 255) {\n    g = 255;\n  } else if (g < 0) {\n    g = 0;\n  }\n\n  return (usePound ? \"#\" : \"\") + (g | b << 8 | r << 16).toString(16);\n};","map":{"version":3,"sources":["/Users/sumedhreddy/Documents/stealth/stealth-startup/src/helpers/CommonHelper.ts"],"names":["lightenDarkenColor","colorCode","amount","usePound","slice","num","parseInt","r","b","g","toString"],"mappings":"AAAA,OAAO,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,SAAD,EAAoBC,MAApB,EAAuC;AACvE,MAAIC,QAAQ,GAAG,KAAf;;AAEA,MAAIF,SAAS,CAAC,CAAD,CAAT,IAAgB,GAApB,EAAyB;AACvBA,IAAAA,SAAS,GAAGA,SAAS,CAACG,KAAV,CAAgB,CAAhB,CAAZ;AACAD,IAAAA,QAAQ,GAAG,IAAX;AACD;;AAED,MAAIE,GAAG,GAAGC,QAAQ,CAACL,SAAD,EAAY,EAAZ,CAAlB;AAEA,MAAIM,CAAC,GAAG,CAACF,GAAG,IAAI,EAAR,IAAcH,MAAtB;;AAEA,MAAIK,CAAC,GAAG,GAAR,EAAa;AACXA,IAAAA,CAAC,GAAG,GAAJ;AACD,GAFD,MAEO,IAAIA,CAAC,GAAG,CAAR,EAAW;AAChBA,IAAAA,CAAC,GAAG,CAAJ;AACD;;AAED,MAAIC,CAAC,GAAG,CAAEH,GAAG,IAAI,CAAR,GAAa,MAAd,IAAwBH,MAAhC;;AAEA,MAAIM,CAAC,GAAG,GAAR,EAAa;AACXA,IAAAA,CAAC,GAAG,GAAJ;AACD,GAFD,MAEO,IAAIA,CAAC,GAAG,CAAR,EAAW;AAChBA,IAAAA,CAAC,GAAG,CAAJ;AACD;;AAED,MAAIC,CAAC,GAAG,CAACJ,GAAG,GAAG,QAAP,IAAmBH,MAA3B;;AAEA,MAAIO,CAAC,GAAG,GAAR,EAAa;AACXA,IAAAA,CAAC,GAAG,GAAJ;AACD,GAFD,MAEO,IAAIA,CAAC,GAAG,CAAR,EAAW;AAChBA,IAAAA,CAAC,GAAG,CAAJ;AACD;;AAED,SAAO,CAACN,QAAQ,GAAG,GAAH,GAAS,EAAlB,IAAwB,CAACM,CAAC,GAAID,CAAC,IAAI,CAAV,GAAgBD,CAAC,IAAI,EAAtB,EAA2BG,QAA3B,CAAoC,EAApC,CAA/B;AACD,CAnCM","sourcesContent":["export const lightenDarkenColor = (colorCode: string, amount: number) => {\n  var usePound = false;\n\n  if (colorCode[0] == \"#\") {\n    colorCode = colorCode.slice(1);\n    usePound = true;\n  }\n\n  var num = parseInt(colorCode, 16);\n\n  var r = (num >> 16) + amount;\n\n  if (r > 255) {\n    r = 255;\n  } else if (r < 0) {\n    r = 0;\n  }\n\n  var b = ((num >> 8) & 0x00ff) + amount;\n\n  if (b > 255) {\n    b = 255;\n  } else if (b < 0) {\n    b = 0;\n  }\n\n  var g = (num & 0x0000ff) + amount;\n\n  if (g > 255) {\n    g = 255;\n  } else if (g < 0) {\n    g = 0;\n  }\n\n  return (usePound ? \"#\" : \"\") + (g | (b << 8) | (r << 16)).toString(16);\n};\n"]},"metadata":{},"sourceType":"module"}