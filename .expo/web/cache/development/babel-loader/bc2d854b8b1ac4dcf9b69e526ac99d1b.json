{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\n\nvar get = function get(newsId) {\n  return _regeneratorRuntime.async(function get$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"news/\" + newsId));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar getAllByCategory = function getAllByCategory(category) {\n  return _regeneratorRuntime.async(function getAllByCategory$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"news_categories/\" + category.id + \"/news\"));\n\n        case 2:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar search = function search(searchText) {\n  return _regeneratorRuntime.async(function search$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(axios.post(\"news/search\", {\n            searchText: searchText\n          }));\n\n        case 2:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar getFavoritedNews = function getFavoritedNews() {\n  return _regeneratorRuntime.async(function getFavoritedNews$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"news_favorited\"));\n\n        case 2:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 3:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar favoriteNews = function favoriteNews(newsId, isFavorited) {\n  return _regeneratorRuntime.async(function favoriteNews$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(axios.post(\"news/favorite\", {\n            newsId: newsId,\n            isFavorited: isFavorited\n          }));\n\n        case 2:\n          return _context5.abrupt(\"return\", _context5.sent);\n\n        case 3:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default {\n  get: get,\n  getAllByCategory: getAllByCategory,\n  search: search,\n  getFavoritedNews: getFavoritedNews,\n  favoriteNews: favoriteNews\n};","map":{"version":3,"sources":["/Users/sumedhreddy/Documents/stealth/stealth-startup/src/services/NewsService.tsx"],"names":["axios","get","newsId","getAllByCategory","category","id","search","searchText","post","getFavoritedNews","favoriteNews","isFavorited"],"mappings":";AAEA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJF,KAAK,CAACC,GAAN,CACJ,UAAUC,MADN,CADI;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAZ;;AAKA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACjBJ,KAAK,CAACC,GAAN,CAAU,qBAAqBG,QAAQ,CAACC,EAA9B,GAAmC,OAA7C,CADiB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACPP,KAAK,CAACQ,IAAN,CAAW,aAAX,EAA0B;AAC9BD,YAAAA,UAAU,EAAEA;AADkB,WAA1B,CADO;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf;;AAKA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAkBT,KAAK,CAACC,GAAN,CAAU,gBAAV,CAAlB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAEA,IAAMS,YAAY,GAAG,SAAfA,YAAe,CAAOR,MAAP,EAAuBS,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACbX,KAAK,CAACQ,IAAN,CAAW,eAAX,EAA4B;AAChCN,YAAAA,MAAM,EAANA,MADgC;AAEhCS,YAAAA,WAAW,EAAXA;AAFgC,WAA5B,CADa;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;;AAMA,eAAe;AACbV,EAAAA,GAAG,EAAHA,GADa;AAEbE,EAAAA,gBAAgB,EAAhBA,gBAFa;AAGbG,EAAAA,MAAM,EAANA,MAHa;AAIbG,EAAAA,gBAAgB,EAAhBA,gBAJa;AAKbC,EAAAA,YAAY,EAAZA;AALa,CAAf","sourcesContent":["import { CategoryModel, NewsModel, NewsCommentModel } from \"../models\";\nimport { DATAS } from \"../datas\";\nimport axios from \"axios\";\n\nconst get = async (newsId: number) =>\n  await axios.get<{ news: NewsModel; otherNews: NewsModel[] }>(\n    \"news/\" + newsId\n  );\n\nconst getAllByCategory = async (category: CategoryModel) =>\n  await axios.get(\"news_categories/\" + category.id + \"/news\");\n\nconst search = async (searchText: string) =>\n  await axios.post(\"news/search\", {\n    searchText: searchText,\n  });\n\nconst getFavoritedNews = async () => await axios.get(\"news_favorited\");\n\nconst favoriteNews = async (newsId: number, isFavorited: boolean) =>\n  await axios.post(\"news/favorite\", {\n    newsId,\n    isFavorited,\n  });\n\nexport default {\n  get,\n  getAllByCategory,\n  search,\n  getFavoritedNews,\n  favoriteNews,\n};\n"]},"metadata":{},"sourceType":"module"}