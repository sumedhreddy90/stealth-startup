{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sumedhreddy/Documents/stealth/stealth-startup/src/context/FavoritedNewsContext.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, Children, useContext, useEffect } from \"react\";\nimport { AuthenticationContext } from \"./AuthenticationContext\";\nimport { NewsService } from \"../services\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nexport var FavoritedNewsContext = React.createContext({\n  favoritedNews: {},\n  favoriteNews: function favoriteNews() {}\n});\nexport var FavoritedNewsProvider = function FavoritedNewsProvider(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      favoritedNews = _useState2[0],\n      setFavoritedNews = _useState2[1];\n\n  var authContext = useContext(AuthenticationContext);\n  useEffect(function () {\n    if (authContext.isLoggedIn) {\n      NewsService.getFavoritedNews().then(function (res) {\n        var newsList = {};\n        res.data.forEach(function (item) {\n          newsList[item.id] = item;\n        });\n        setFavoritedNews(newsList);\n      }).catch(function (err) {\n        if (err.response && err.response.status === 401) {\n          authContext.logout();\n        } else {\n          Alert.alert(err.message);\n        }\n      });\n    } else {\n      setFavoritedNews({});\n    }\n  }, [authContext.isLoggedIn]);\n\n  var favoriteNews = function favoriteNews(news, isFavorite) {\n    if (isFavorite) {\n      favoritedNews[news.id] = news;\n    } else {\n      delete favoritedNews[news.id];\n    }\n\n    setFavoritedNews(_objectSpread({}, favoritedNews));\n  };\n\n  return React.createElement(FavoritedNewsContext.Provider, {\n    value: {\n      favoritedNews: favoritedNews,\n      favoriteNews: favoriteNews\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, Children.only(props.children));\n};","map":{"version":3,"sources":["/Users/sumedhreddy/Documents/stealth/stealth-startup/src/context/FavoritedNewsContext.tsx"],"names":["React","useState","Children","useContext","useEffect","AuthenticationContext","NewsService","FavoritedNewsContext","createContext","favoritedNews","favoriteNews","FavoritedNewsProvider","props","setFavoritedNews","authContext","isLoggedIn","getFavoritedNews","then","res","newsList","data","forEach","item","id","catch","err","response","status","logout","Alert","alert","message","news","isFavorite","only","children"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,UAApC,EAAgDC,SAAhD,QAAiE,OAAjE;AAGA,SAASC,qBAAT;AACA,SAASC,WAAT;;AAQA,OAAO,IAAMC,oBAAoB,GAAGP,KAAK,CAACQ,aAAN,CAElC;AACAC,EAAAA,aAAa,EAAE,EADf;AAEAC,EAAAA,YAAY,EAAE,wBAAM,CAAE;AAFtB,CAFkC,CAA7B;AAOP,OAAO,IAAMC,qBAAuC,GAAG,SAA1CA,qBAA0C,CAACC,KAAD,EAAW;AAChE,kBAA0CX,QAAQ,CAAM,EAAN,CAAlD;AAAA;AAAA,MAAOQ,aAAP;AAAA,MAAsBI,gBAAtB;;AACA,MAAMC,WAAW,GAAGX,UAAU,CAACE,qBAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIU,WAAW,CAACC,UAAhB,EAA4B;AAC1BT,MAAAA,WAAW,CAACU,gBAAZ,GACGC,IADH,CACQ,UAACC,GAAD,EAAS;AACb,YAAIC,QAAqC,GAAG,EAA5C;AACCD,QAAAA,GAAG,CAACE,IAAL,CAA0BC,OAA1B,CAAkC,UAACC,IAAD,EAAU;AAC1CH,UAAAA,QAAQ,CAACG,IAAI,CAACC,EAAN,CAAR,GAAoBD,IAApB;AACD,SAFD;AAGAT,QAAAA,gBAAgB,CAACM,QAAD,CAAhB;AACD,OAPH,EAQGK,KARH,CAQS,UAACC,GAAD,EAAS;AACd,YAAIA,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,CAAaC,MAAb,KAAwB,GAA5C,EAAiD;AAC/Cb,UAAAA,WAAW,CAACc,MAAZ;AACD,SAFD,MAEO;AACLC,UAAAA,KAAK,CAACC,KAAN,CAAYL,GAAG,CAACM,OAAhB;AACD;AACF,OAdH;AAeD,KAhBD,MAgBO;AACLlB,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD;AACF,GApBQ,EAoBN,CAACC,WAAW,CAACC,UAAb,CApBM,CAAT;;AAsBA,MAAML,YAAY,GAAG,SAAfA,YAAe,CAACsB,IAAD,EAAkBC,UAAlB,EAA0C;AAC7D,QAAIA,UAAJ,EAAgB;AACdxB,MAAAA,aAAa,CAACuB,IAAI,CAACT,EAAN,CAAb,GAAyBS,IAAzB;AACD,KAFD,MAEO;AACL,aAAOvB,aAAa,CAACuB,IAAI,CAACT,EAAN,CAApB;AACD;;AACDV,IAAAA,gBAAgB,mBAAMJ,aAAN,EAAhB;AACD,GAPD;;AASA,SACE,oBAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAE;AAAEA,MAAAA,aAAa,EAAbA,aAAF;AAAiBC,MAAAA,YAAY,EAAZA;AAAjB,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,QAAQ,CAACgC,IAAT,CAActB,KAAK,CAACuB,QAApB,CADH,CADF;AAKD,CAxCM","sourcesContent":["import React, { useState, Children, useContext, useEffect } from \"react\";\n\nimport { NewsModel } from \"../models\";\nimport { AuthenticationContext } from \"./AuthenticationContext\";\nimport { NewsService } from \"../services\";\nimport { Alert } from \"react-native\";\n\nexport type FavoritedNewsContextType = {\n  favoritedNews: { [id: string]: NewsModel };\n  favoriteNews: (news: NewsModel, isFavorite: boolean) => void;\n};\n\nexport const FavoritedNewsContext = React.createContext<\n  FavoritedNewsContextType\n>({\n  favoritedNews: {},\n  favoriteNews: () => {},\n});\n\nexport const FavoritedNewsProvider: React.FC<object> = (props) => {\n  const [favoritedNews, setFavoritedNews] = useState<any>({});\n  const authContext = useContext(AuthenticationContext);\n\n  useEffect(() => {\n    if (authContext.isLoggedIn) {\n      NewsService.getFavoritedNews()\n        .then((res) => {\n          var newsList: { [id: string]: NewsModel } = {};\n          (res.data as NewsModel[]).forEach((item) => {\n            newsList[item.id] = item;\n          });\n          setFavoritedNews(newsList);\n        })\n        .catch((err) => {\n          if (err.response && err.response.status === 401) {\n            authContext.logout();\n          } else {\n            Alert.alert(err.message);\n          }\n        });\n    } else {\n      setFavoritedNews({});\n    }\n  }, [authContext.isLoggedIn]);\n\n  const favoriteNews = (news: NewsModel, isFavorite: boolean) => {\n    if (isFavorite) {\n      favoritedNews[news.id] = news;\n    } else {\n      delete favoritedNews[news.id];\n    }\n    setFavoritedNews({ ...favoritedNews });\n  };\n\n  return (\n    <FavoritedNewsContext.Provider value={{ favoritedNews, favoriteNews }}>\n      {Children.only(props.children)}\n    </FavoritedNewsContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}