{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\n\nvar getAll = function getAll(newsId) {\n  return _regeneratorRuntime.async(function getAll$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"news/\" + newsId + \"/comments\"));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar post = function post(newsId, comment) {\n  return _regeneratorRuntime.async(function post$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(axios.post(\"news/\" + newsId + \"/comments\", {\n            comment: comment\n          }));\n\n        case 2:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default {\n  getAll: getAll,\n  post: post\n};","map":{"version":3,"sources":["/Users/sumedhreddy/Documents/stealth/stealth-startup/src/services/NewsCommentService.tsx"],"names":["axios","getAll","newsId","get","post","comment"],"mappings":";AAEA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACPF,KAAK,CAACG,GAAN,CAA8B,UAAUD,MAAV,GAAmB,WAAjD,CADO;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf;;AAGA,IAAME,IAAI,GAAG,SAAPA,IAAO,CAAOF,MAAP,EAAuBG,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACLL,KAAK,CAACI,IAAN,CAAW,UAAUF,MAAV,GAAmB,WAA9B,EAA2C;AAC/CG,YAAAA,OAAO,EAAEA;AADsC,WAA3C,CADK;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAb;;AAKA,eAAe;AACbJ,EAAAA,MAAM,EAANA,MADa;AAEbG,EAAAA,IAAI,EAAJA;AAFa,CAAf","sourcesContent":["import { CategoryModel, NewsModel, NewsCommentModel } from \"../models\";\nimport { DATAS } from \"../datas\";\nimport axios from \"axios\";\n\nconst getAll = async (newsId: number) =>\n  await axios.get<NewsCommentModel[]>(\"news/\" + newsId + \"/comments\");\n\nconst post = async (newsId: number, comment: string) =>\n  await axios.post(\"news/\" + newsId + \"/comments\", {\n    comment: comment,\n  });\n\nexport default {\n  getAll,\n  post,\n};\n"]},"metadata":{},"sourceType":"module"}